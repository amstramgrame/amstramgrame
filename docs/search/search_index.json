{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Amstramgrame qu'est-ce que c'est ? ARTS & SCIENCES Un projet p\u00e9dagogique arts & sciences, r\u00e9unissant services et ressources \u00e0 destination de la communaut\u00e9 \u00e9ducative. Il permet une mise en application concr\u00e8te de concepts scientifiques parfois abstraits en utilisant la cr\u00e9ation musicale et la programmation informatique comme vecteurs. POUR QUI ? Un projet destin\u00e9 aux \u00e9l\u00e8ves de cycle primaire et secondaire, ainsi que leurs enseignants. Il place les sciences et l\u2019ing\u00e9nierie au c\u0153ur de la d\u00e9marche p\u00e9dagogique en les inscrivant dans le domaine de la cr\u00e9ation musicale et sonore. Les outils FAUST FAUST (Functional AUdio STream) est un langage de programmation, cr\u00e9\u00e9 et d\u00e9velopp\u00e9 \u00e0 Grame . Il permet de concevoir de mani\u00e8re simple des synth\u00e9tiseurs (instrument de musique \u00e9lectronique) et des effets sonores pour un grand nombre de plateformes. Il peut \u00eatre notamment utilis\u00e9 pour cr\u00e9er des application web et mobile pour la musique. LE GRAMOPHONE Le Gramophone est un dispositif audio sp\u00e9cialement con\u00e7u pour le projet Amstramgrame. Ses diff\u00e9rents capteurs et contr\u00f4leurs (ex. acc\u00e9l\u00e9rom\u00e8tre, gyroscope, capteur de lumi\u00e8re, etc.) le font r\u00e9agir aux gestes de l\u2019utilisateur. Sa batterie offrant environ cinq heures d\u2019autonomie et son haut-parleur puissant le rendent ind\u00e9pendant de tout ordinateur, le rapprochant ainsi des instruments de musique acoustiques traditionnels. SMARTFAUST SmartFaust est un concept d\u2019applications musicales pour smartphones d\u00e9velopp\u00e9 par le langage FAUST. Ces applications ont la particularit\u00e9 de faire uniquement appel aux gestes de l\u2019utilisateur et non pas \u00e0 un pianotage sur l\u2019\u00e9cran de l\u2019appareil. R\u00e9alis\u00e9es pour iOS et Android elles savent en outre exploiter les capteurs de mouvement de ces appareils ce qui permet d\u2019en faire de v\u00e9ritables instruments de musique. GAMELAN Ensemble d\u2019applications musicales pour smartphone s\u2019inspirant de la tradition musicale javanaise \u00e0 laquelle s\u2019ajoute des univers sonores \u00e9lectroniques. Les 7 applications, (Attackey, Baliphone, DroneLAN, Sequenceur, ShakerXY, Sinuso\u00efde, Atomicro) de la famille GameLan peuvent \u00eatre jou\u00e9es en solo ou en orchestre utilisant les mouvements du smartphone. Pas de pr\u00e9requis musical, seul les gestes feront de l\u2019utilisateur un musicien. Les partenaires GRAME Grame est un centre national de cr\u00e9ation musicale. Sa mission principale est de permettre la conception et la r\u00e9alisation d\u2019\u0153uvres musicales nouvelles, dans un contexte de transversalit\u00e9 des arts et de synergie arts - sciences. CANOP\u00c9 R\u00e9seau Canop\u00e9 est le r\u00e9seau de cr\u00e9ation et d\u2019accompagnement p\u00e9dagogiques plac\u00e9 sous la tutelle du minist\u00e8re de l\u2019\u00c9ducation nationale. Il \u00e9dite et diffuse des ressources p\u00e9dagogiques multi-formats r\u00e9pondant aux besoins de la communaut\u00e9 \u00e9ducative.","title":"Home"},{"location":"#amstramgrame-quest-ce-que-cest","text":"","title":"Amstramgrame qu'est-ce que c'est ?"},{"location":"#arts-sciences","text":"Un projet p\u00e9dagogique arts & sciences, r\u00e9unissant services et ressources \u00e0 destination de la communaut\u00e9 \u00e9ducative. Il permet une mise en application concr\u00e8te de concepts scientifiques parfois abstraits en utilisant la cr\u00e9ation musicale et la programmation informatique comme vecteurs.","title":"ARTS &amp; SCIENCES"},{"location":"#pour-qui","text":"Un projet destin\u00e9 aux \u00e9l\u00e8ves de cycle primaire et secondaire, ainsi que leurs enseignants. Il place les sciences et l\u2019ing\u00e9nierie au c\u0153ur de la d\u00e9marche p\u00e9dagogique en les inscrivant dans le domaine de la cr\u00e9ation musicale et sonore.","title":"POUR QUI ?"},{"location":"#les-outils","text":"","title":"Les outils"},{"location":"#faust","text":"FAUST (Functional AUdio STream) est un langage de programmation, cr\u00e9\u00e9 et d\u00e9velopp\u00e9 \u00e0 Grame . Il permet de concevoir de mani\u00e8re simple des synth\u00e9tiseurs (instrument de musique \u00e9lectronique) et des effets sonores pour un grand nombre de plateformes. Il peut \u00eatre notamment utilis\u00e9 pour cr\u00e9er des application web et mobile pour la musique.","title":"FAUST"},{"location":"#le-gramophone","text":"Le Gramophone est un dispositif audio sp\u00e9cialement con\u00e7u pour le projet Amstramgrame. Ses diff\u00e9rents capteurs et contr\u00f4leurs (ex. acc\u00e9l\u00e9rom\u00e8tre, gyroscope, capteur de lumi\u00e8re, etc.) le font r\u00e9agir aux gestes de l\u2019utilisateur. Sa batterie offrant environ cinq heures d\u2019autonomie et son haut-parleur puissant le rendent ind\u00e9pendant de tout ordinateur, le rapprochant ainsi des instruments de musique acoustiques traditionnels.","title":"LE GRAMOPHONE"},{"location":"#smartfaust","text":"SmartFaust est un concept d\u2019applications musicales pour smartphones d\u00e9velopp\u00e9 par le langage FAUST. Ces applications ont la particularit\u00e9 de faire uniquement appel aux gestes de l\u2019utilisateur et non pas \u00e0 un pianotage sur l\u2019\u00e9cran de l\u2019appareil. R\u00e9alis\u00e9es pour iOS et Android elles savent en outre exploiter les capteurs de mouvement de ces appareils ce qui permet d\u2019en faire de v\u00e9ritables instruments de musique.","title":"SMARTFAUST"},{"location":"#gamelan","text":"Ensemble d\u2019applications musicales pour smartphone s\u2019inspirant de la tradition musicale javanaise \u00e0 laquelle s\u2019ajoute des univers sonores \u00e9lectroniques. Les 7 applications, (Attackey, Baliphone, DroneLAN, Sequenceur, ShakerXY, Sinuso\u00efde, Atomicro) de la famille GameLan peuvent \u00eatre jou\u00e9es en solo ou en orchestre utilisant les mouvements du smartphone. Pas de pr\u00e9requis musical, seul les gestes feront de l\u2019utilisateur un musicien.","title":"GAMELAN"},{"location":"#les-partenaires","text":"","title":"Les partenaires"},{"location":"#grame","text":"Grame est un centre national de cr\u00e9ation musicale. Sa mission principale est de permettre la conception et la r\u00e9alisation d\u2019\u0153uvres musicales nouvelles, dans un contexte de transversalit\u00e9 des arts et de synergie arts - sciences.","title":"GRAME"},{"location":"#canope","text":"R\u00e9seau Canop\u00e9 est le r\u00e9seau de cr\u00e9ation et d\u2019accompagnement p\u00e9dagogiques plac\u00e9 sous la tutelle du minist\u00e8re de l\u2019\u00c9ducation nationale. Il \u00e9dite et diffuse des ressources p\u00e9dagogiques multi-formats r\u00e9pondant aux besoins de la communaut\u00e9 \u00e9ducative.","title":"CANOP\u00c9"},{"location":"about/","text":"\u00c0 propos","title":"\u00c0 propos"},{"location":"about/#a-propos","text":"","title":"\u00c0 propos"},{"location":"faust/about/","text":"Le langage de programmation Faust Un monde de langages de programmation \u00c0 l'image des langages utilis\u00e9s par les humains pour communiquer entre-eux comme le Fran\u00e7ais, l'Allemand, le Chinois, etc., il existe aujourd'hui des dizaines de langages de programmation informatique. Certains, comme Python, Java ou JavaScript sont devenus des standards et sont connus d'un grand nombre de personnes, d'autres comme Assembleur ou VHDL s'adressent \u00e0 un public d'utilisateur plus sp\u00e9cialis\u00e9. La plupart des langages de programmation grand-public sont dit \u00e0 \"usage g\u00e9n\u00e9ral\", c'est \u00e0 dire qu'ils peuvent \u00eatre utilis\u00e9s pour construire n'importe quel type de programme pour tout types d'applications. \u00c0 l'inverse, il existe des langages \u00e0 usage sp\u00e9cifique qui ne peuvent \u00eatre utilis\u00e9s que pour effectuer un type de t\u00e2che donn\u00e9. C'est le cas de Faust qui est plac\u00e9 au c\u0153ur d'AmStramGrame. Faust a \u00e9t\u00e9 sp\u00e9cialement con\u00e7u pour programmer (synth\u00e9tiser) et manipuler (traiter) des sons. En effet, bien qu'il soit possible d'\u00e9crire (impl\u00e9menter) des algorithmes pour la synth\u00e8se et le traitement du son dans des langages \u00e0 usage g\u00e9n\u00e9ral comme Python ou Java, ces derniers sont souvent trop peu performants pour produire du son de mani\u00e8re instantan\u00e9e (en temps r\u00e9el). Or, pour faire de la musique, il est n\u00e9cessaire que les sons soient produits de mani\u00e8re imm\u00e9diate. Il existe un langage \u00e0 usage g\u00e9n\u00e9ral qui permet de mener \u00e0 bien cette t\u00e2che : C/C++. Toutefois, l'utilisation de ce dernier est r\u00e9serv\u00e9e \u00e0 des programmeurs chevronn\u00e9s et n\u00e9cessite des ann\u00e9es de pratique. \u00c0 l'inverse, Faust est simple d'utilisation et s'adresse \u00e0 tous les publics. Faust, c'est quoi ? En termes purement scientifiques, Faust est \"un langage de programmation pour le traitement du signal en temps-r\u00e9el\". Dis autrement, c'est un langage fait pour programmer des sons et les produire de mani\u00e8re instantan\u00e9e. Faust est issu d'une longue lign\u00e9e de langage de programmation sp\u00e9cialement con\u00e7us pour le domaine de la musique. Il peut \u00eatre utilis\u00e9 directement en ligne \u00e0 travers la plateforme Faust Web IDE ( https://faustide.grame.fr ) ou en l'installant sur sa machine (cette option s'adresse \u00e0 des programmateurs exp\u00e9riment\u00e9s). Un programme Faust peut potentiellement \u00eatre tr\u00e8s court et ne faire que quelques lignes : import(\"stdfaust.lib\"); freq = 440; process = os.sawtooth(freq); \u00c9diter/ex\u00e9cuter le programme >> Pour tester ce programme, clique sur le bouton \"\u00c9diter/ex\u00e9cuter le programme\". Le Faust Web IDE devrait alors s'ouvrir avec le code correspondant. Clique sur le bouton \"Run\" pour ex\u00e9cuter le code dans le Faust Web IDE (la page qui vient de s'ouvrir) : Un son devrait \u00eatre produit ! Plus d'information sur l'utilisation du Faust Web IDE sont disponibles ici . Faust peut \u00eatre utilis\u00e9 pour cr\u00e9er toutes sortes d'objets sur un grand nombre de syst\u00e8mes : applications mobiles (iOS et Android) ; web-apps ; plugins audios (VST, AU, etc.) ; des programmes pr\u00eats \u00e0 l\u2019emploi pour MacOS, Linux et Windows ; des syst\u00e8mes embarqu\u00e9s comme le gramophone . De mani\u00e8re plus fondamentale, Faust permet \u00e9galement de convertir/traduire un code Faust en d'autres langages de programmation tel que C, C++, Java, LLVM, WebAssembly, etc. Aller plus loin Faust est utilis\u00e9 comme outil d'enseignement dans des universit\u00e9s et comme outil de d\u00e9veloppement pas des industriels ou des musiciens professionnel : une ma\u00eetrise compl\u00e8te de Faust ne peut s\u2019acqu\u00e9rir qu'apr\u00e8s des ann\u00e9es d\u2019exp\u00e9rience. Les diff\u00e9rents sc\u00e9narii et tutoriels disponibles sur le site d'Amstramgrame ne sont qu'une simple introduction \u00e0 cet outil. Pour compl\u00e9ter vos connaissances sur Faust, vous pouvez : suivre le cours en ligne sur Faust sur la plateforme Kadenze : https://www.kadenze.com/courses/real-time-audio-signal-processing-in-faust/info (en Anglais) consulter le site de la documentation du langage Faust : https://faustdoc.grame.fr (en Anglais)","title":" Qu&#39;est-ce que c&#39;est ? "},{"location":"faust/about/#le-langage-de-programmation-faust","text":"","title":"Le langage de programmation Faust"},{"location":"faust/about/#un-monde-de-langages-de-programmation","text":"\u00c0 l'image des langages utilis\u00e9s par les humains pour communiquer entre-eux comme le Fran\u00e7ais, l'Allemand, le Chinois, etc., il existe aujourd'hui des dizaines de langages de programmation informatique. Certains, comme Python, Java ou JavaScript sont devenus des standards et sont connus d'un grand nombre de personnes, d'autres comme Assembleur ou VHDL s'adressent \u00e0 un public d'utilisateur plus sp\u00e9cialis\u00e9. La plupart des langages de programmation grand-public sont dit \u00e0 \"usage g\u00e9n\u00e9ral\", c'est \u00e0 dire qu'ils peuvent \u00eatre utilis\u00e9s pour construire n'importe quel type de programme pour tout types d'applications. \u00c0 l'inverse, il existe des langages \u00e0 usage sp\u00e9cifique qui ne peuvent \u00eatre utilis\u00e9s que pour effectuer un type de t\u00e2che donn\u00e9. C'est le cas de Faust qui est plac\u00e9 au c\u0153ur d'AmStramGrame. Faust a \u00e9t\u00e9 sp\u00e9cialement con\u00e7u pour programmer (synth\u00e9tiser) et manipuler (traiter) des sons. En effet, bien qu'il soit possible d'\u00e9crire (impl\u00e9menter) des algorithmes pour la synth\u00e8se et le traitement du son dans des langages \u00e0 usage g\u00e9n\u00e9ral comme Python ou Java, ces derniers sont souvent trop peu performants pour produire du son de mani\u00e8re instantan\u00e9e (en temps r\u00e9el). Or, pour faire de la musique, il est n\u00e9cessaire que les sons soient produits de mani\u00e8re imm\u00e9diate. Il existe un langage \u00e0 usage g\u00e9n\u00e9ral qui permet de mener \u00e0 bien cette t\u00e2che : C/C++. Toutefois, l'utilisation de ce dernier est r\u00e9serv\u00e9e \u00e0 des programmeurs chevronn\u00e9s et n\u00e9cessite des ann\u00e9es de pratique. \u00c0 l'inverse, Faust est simple d'utilisation et s'adresse \u00e0 tous les publics.","title":"Un monde de langages de programmation"},{"location":"faust/about/#faust-cest-quoi","text":"En termes purement scientifiques, Faust est \"un langage de programmation pour le traitement du signal en temps-r\u00e9el\". Dis autrement, c'est un langage fait pour programmer des sons et les produire de mani\u00e8re instantan\u00e9e. Faust est issu d'une longue lign\u00e9e de langage de programmation sp\u00e9cialement con\u00e7us pour le domaine de la musique. Il peut \u00eatre utilis\u00e9 directement en ligne \u00e0 travers la plateforme Faust Web IDE ( https://faustide.grame.fr ) ou en l'installant sur sa machine (cette option s'adresse \u00e0 des programmateurs exp\u00e9riment\u00e9s). Un programme Faust peut potentiellement \u00eatre tr\u00e8s court et ne faire que quelques lignes : import(\"stdfaust.lib\"); freq = 440; process = os.sawtooth(freq); \u00c9diter/ex\u00e9cuter le programme >> Pour tester ce programme, clique sur le bouton \"\u00c9diter/ex\u00e9cuter le programme\". Le Faust Web IDE devrait alors s'ouvrir avec le code correspondant. Clique sur le bouton \"Run\" pour ex\u00e9cuter le code dans le Faust Web IDE (la page qui vient de s'ouvrir) : Un son devrait \u00eatre produit ! Plus d'information sur l'utilisation du Faust Web IDE sont disponibles ici . Faust peut \u00eatre utilis\u00e9 pour cr\u00e9er toutes sortes d'objets sur un grand nombre de syst\u00e8mes : applications mobiles (iOS et Android) ; web-apps ; plugins audios (VST, AU, etc.) ; des programmes pr\u00eats \u00e0 l\u2019emploi pour MacOS, Linux et Windows ; des syst\u00e8mes embarqu\u00e9s comme le gramophone . De mani\u00e8re plus fondamentale, Faust permet \u00e9galement de convertir/traduire un code Faust en d'autres langages de programmation tel que C, C++, Java, LLVM, WebAssembly, etc.","title":"Faust, c'est quoi ?"},{"location":"faust/about/#aller-plus-loin","text":"Faust est utilis\u00e9 comme outil d'enseignement dans des universit\u00e9s et comme outil de d\u00e9veloppement pas des industriels ou des musiciens professionnel : une ma\u00eetrise compl\u00e8te de Faust ne peut s\u2019acqu\u00e9rir qu'apr\u00e8s des ann\u00e9es d\u2019exp\u00e9rience. Les diff\u00e9rents sc\u00e9narii et tutoriels disponibles sur le site d'Amstramgrame ne sont qu'une simple introduction \u00e0 cet outil. Pour compl\u00e9ter vos connaissances sur Faust, vous pouvez : suivre le cours en ligne sur Faust sur la plateforme Kadenze : https://www.kadenze.com/courses/real-time-audio-signal-processing-in-faust/info (en Anglais) consulter le site de la documentation du langage Faust : https://faustdoc.grame.fr (en Anglais)","title":"Aller plus loin"},{"location":"faust/ide/","text":"Le Faust Web IDE Le Faust Web IDE (accessible sur https://faustide.grame.fr ) est un outil en ligne permettant d'\u00e9crire des programmes Faust, de les tester directement dans le navigateur web, puis de les exporter sur le Gramophone via l'application GramoLoader . Le terme IDE vient de l'anglais et est l'abr\u00e9viation de \"Integrated Development Environment\" (soit \"environnement de d\u00e9veloppement int\u00e9gr\u00e9\" en Fran\u00e7ais). C'est un standard dans le domaine de l'informatique pour d\u00e9signer un outil facilitant l'utilisation d'un langage de programmation. Lancer le Faust Web IDE Bien que le Faust Web IDE soit compatible avec la plupart des navigateurs web, il est fortement recommand\u00e9 d'utiliser Google Chrome ou Mozilla Firefox. Dans le cas o\u00f9 MIDI serait n\u00e9cessaire pour le programme Faust, seul Google Chrome fonctionnera (la norme MIDI n'\u00e9tant pas support\u00e9e dans Firefox). Trois versions du Faust Web IDE sont disponibles pour les utilisateurs du projet Amstramgrame : La version \"simplifi\u00e9e sp\u00e9ciale Amstramgrame\" (pour les \u00e9l\u00e8ves) : https://faustide.grame.fr/?mode=amstram La version \"avanc\u00e9e sp\u00e9ciale Amstramgrame\" (pour les enseignants) : https://faustide.grame.fr/?mode=amstram-pro La version \"standard\" : https://faustide.grame.fr La version simplifi\u00e9e satisfera les besoins de la plupart des utilisateurs du Gramophone. Lorsque le Faust Web IDE est ouvert pour la premi\u00e8re fois, il demande d'avoir acc\u00e8s au micro int\u00e9gr\u00e9 de la machine : il est important d\u2019accepter cette demande. Une fois ouvert, un programme Faust par d\u00e9faut impl\u00e9mentant un djemb\u00e9 devrait s'afficher : Le menu de gauche permet d'acc\u00e9der aux diff\u00e9rentes fonctions du Faust Web IDE (ex. ex\u00e9cuter le programme dans le navigateur, exporter le programme vers le Gramophone, etc.) : La zone d'\u00e9dition de texte permet d'\u00e9crire le programme Faust : La zone en dessous de l'\u00e9diteur de code affiche le diagramme ou l'interface utilisateur correspond au programme Faust si ce dernier est ex\u00e9cuter : Notez que le Faust Web IDE est en anglais. La programmation informatique \u00e9tant g\u00e9n\u00e9ralement effectu\u00e9e dans cette langue, le Faust Web IDE ne d\u00e9roge pas \u00e0 cette r\u00e8gle :). Produire du son Pour ex\u00e9cuter le programme par d\u00e9faut, il suffit de cliquer sur le bouton \"run\" dans le menu de gauche : La fen\u00eatre qui s'ouvre et remplace le diagramme correspond \u00e0 l'interface utilisateur du programme Faust ex\u00e9cut\u00e9. Fermer cette fen\u00eatre en cliquant sur la croix \u00e0 c\u00f4t\u00e9 de DSP permet d'arr\u00eater le programme et donc de couper le son : Utiliser les exemples du site Amstramgrame Les diff\u00e9rents tutoriels et sc\u00e9narii sur le site d'Amstramgrame contiennent des dizaines d'exemples de programmes pr\u00eats \u00e0 \u00eatre utilis\u00e9s dans le Faust Web IDE et dans certains cas ex\u00e9cut\u00e9s sur le Gramophone. Ils se pr\u00e9sentent de la mani\u00e8re suivante : import(\"stdfaust.lib\"); process = no.noise; \u00c9diter/ex\u00e9cuter le programme >> D'abord on peut voir le digramme correspondant au programme Faust pr\u00e9sent\u00e9 en dessous. Le bouton \"\u00c9diter/ex\u00e9cuter le programme\" permet d'ouvrir l'exemple directement dans le Faust Web IDE. Essaye pour voir ! Une fois ouvert dans l'IDE, les programmes d'exemples peuvent \u00eatre utilis\u00e9s comme n'importe quel autre programme Faust. Exporter un programme vers le Gramophone Tout programme \u00e9crit et fonctionnant dans le Faust Web IDE peut \u00eatre envoy\u00e9 vers le Gramophone connect\u00e9 \u00e0 l'ordinateur. La page \"programmer le Gramophone\" donne la marche \u00e0 suivre. Autres fonctionnalit\u00e9s Plusieurs programmes peuvent \u00eatre ouverts dans le Faust Web IDE en m\u00eame temps. Pour cr\u00e9er un nouveau programme vide, il suffit de cliquer sur le bouton en haut \u00e0 gauche : Avant de pouvoir ex\u00e9cuter ce nouveau programme, il est n\u00e9cessaire de le s\u00e9lectionner : \u00c0 noter que l'onglet \"Examples\" au dessus de la zone d'\u00e9dition du code donne acc\u00e8s \u00e0 des dizaines d'exemples de programmes Faust. De la m\u00eame mani\u00e8re, n'importe quel programme Faust disponible en local sur la machine peut \u00eatre \"gliss\u00e9\" dans le Faust Web IDE. D'autre fonctionnalit\u00e9s sont accessibles dans le menu de gauche du Faust Web IDE. N'h\u00e9sitez pas \u00e0 les d\u00e9couvrir par vous-m\u00eame :).","title":" Le Faust Web IDE "},{"location":"faust/ide/#le-faust-web-ide","text":"Le Faust Web IDE (accessible sur https://faustide.grame.fr ) est un outil en ligne permettant d'\u00e9crire des programmes Faust, de les tester directement dans le navigateur web, puis de les exporter sur le Gramophone via l'application GramoLoader . Le terme IDE vient de l'anglais et est l'abr\u00e9viation de \"Integrated Development Environment\" (soit \"environnement de d\u00e9veloppement int\u00e9gr\u00e9\" en Fran\u00e7ais). C'est un standard dans le domaine de l'informatique pour d\u00e9signer un outil facilitant l'utilisation d'un langage de programmation.","title":"Le Faust Web IDE"},{"location":"faust/ide/#lancer-le-faust-web-ide","text":"Bien que le Faust Web IDE soit compatible avec la plupart des navigateurs web, il est fortement recommand\u00e9 d'utiliser Google Chrome ou Mozilla Firefox. Dans le cas o\u00f9 MIDI serait n\u00e9cessaire pour le programme Faust, seul Google Chrome fonctionnera (la norme MIDI n'\u00e9tant pas support\u00e9e dans Firefox). Trois versions du Faust Web IDE sont disponibles pour les utilisateurs du projet Amstramgrame : La version \"simplifi\u00e9e sp\u00e9ciale Amstramgrame\" (pour les \u00e9l\u00e8ves) : https://faustide.grame.fr/?mode=amstram La version \"avanc\u00e9e sp\u00e9ciale Amstramgrame\" (pour les enseignants) : https://faustide.grame.fr/?mode=amstram-pro La version \"standard\" : https://faustide.grame.fr La version simplifi\u00e9e satisfera les besoins de la plupart des utilisateurs du Gramophone. Lorsque le Faust Web IDE est ouvert pour la premi\u00e8re fois, il demande d'avoir acc\u00e8s au micro int\u00e9gr\u00e9 de la machine : il est important d\u2019accepter cette demande. Une fois ouvert, un programme Faust par d\u00e9faut impl\u00e9mentant un djemb\u00e9 devrait s'afficher : Le menu de gauche permet d'acc\u00e9der aux diff\u00e9rentes fonctions du Faust Web IDE (ex. ex\u00e9cuter le programme dans le navigateur, exporter le programme vers le Gramophone, etc.) : La zone d'\u00e9dition de texte permet d'\u00e9crire le programme Faust : La zone en dessous de l'\u00e9diteur de code affiche le diagramme ou l'interface utilisateur correspond au programme Faust si ce dernier est ex\u00e9cuter : Notez que le Faust Web IDE est en anglais. La programmation informatique \u00e9tant g\u00e9n\u00e9ralement effectu\u00e9e dans cette langue, le Faust Web IDE ne d\u00e9roge pas \u00e0 cette r\u00e8gle :).","title":"Lancer le Faust Web IDE"},{"location":"faust/ide/#produire-du-son","text":"Pour ex\u00e9cuter le programme par d\u00e9faut, il suffit de cliquer sur le bouton \"run\" dans le menu de gauche : La fen\u00eatre qui s'ouvre et remplace le diagramme correspond \u00e0 l'interface utilisateur du programme Faust ex\u00e9cut\u00e9. Fermer cette fen\u00eatre en cliquant sur la croix \u00e0 c\u00f4t\u00e9 de DSP permet d'arr\u00eater le programme et donc de couper le son :","title":"Produire du son"},{"location":"faust/ide/#utiliser-les-exemples-du-site-amstramgrame","text":"Les diff\u00e9rents tutoriels et sc\u00e9narii sur le site d'Amstramgrame contiennent des dizaines d'exemples de programmes pr\u00eats \u00e0 \u00eatre utilis\u00e9s dans le Faust Web IDE et dans certains cas ex\u00e9cut\u00e9s sur le Gramophone. Ils se pr\u00e9sentent de la mani\u00e8re suivante : import(\"stdfaust.lib\"); process = no.noise; \u00c9diter/ex\u00e9cuter le programme >> D'abord on peut voir le digramme correspondant au programme Faust pr\u00e9sent\u00e9 en dessous. Le bouton \"\u00c9diter/ex\u00e9cuter le programme\" permet d'ouvrir l'exemple directement dans le Faust Web IDE. Essaye pour voir ! Une fois ouvert dans l'IDE, les programmes d'exemples peuvent \u00eatre utilis\u00e9s comme n'importe quel autre programme Faust.","title":"Utiliser les exemples du site Amstramgrame"},{"location":"faust/ide/#exporter-un-programme-vers-le-gramophone","text":"Tout programme \u00e9crit et fonctionnant dans le Faust Web IDE peut \u00eatre envoy\u00e9 vers le Gramophone connect\u00e9 \u00e0 l'ordinateur. La page \"programmer le Gramophone\" donne la marche \u00e0 suivre.","title":"Exporter un programme vers le Gramophone"},{"location":"faust/ide/#autres-fonctionnalites","text":"Plusieurs programmes peuvent \u00eatre ouverts dans le Faust Web IDE en m\u00eame temps. Pour cr\u00e9er un nouveau programme vide, il suffit de cliquer sur le bouton en haut \u00e0 gauche : Avant de pouvoir ex\u00e9cuter ce nouveau programme, il est n\u00e9cessaire de le s\u00e9lectionner : \u00c0 noter que l'onglet \"Examples\" au dessus de la zone d'\u00e9dition du code donne acc\u00e8s \u00e0 des dizaines d'exemples de programmes Faust. De la m\u00eame mani\u00e8re, n'importe quel programme Faust disponible en local sur la machine peut \u00eatre \"gliss\u00e9\" dans le Faust Web IDE. D'autre fonctionnalit\u00e9s sont accessibles dans le menu de gauche du Faust Web IDE. N'h\u00e9sitez pas \u00e0 les d\u00e9couvrir par vous-m\u00eame :).","title":"Autres fonctionnalit\u00e9s"},{"location":"faust/playground/","text":"Le Faust Playground Le Faust Playground est un outil en ligne (accessible sur https://faustplayground.grame.fr/ ) permettant d'assembler des programmes \u00e9crits en Faust de mani\u00e8re simple avec une interface graphique. Il peut \u00e9galement exporter les programmes produits vers les diff\u00e9rentes plateformes support\u00e9es par Faust pour cr\u00e9er des applications pour smartphones, programmer le Gramophone, cr\u00e9er des plug-ins audios, etc. Le Faust Playground Bien que le Faust Playground soit compatible avec la plupart des navigateurs web, il est fortement recommand\u00e9 d'utiliser Google Chrome ou Mozilla Firefox. Produire du son Le Faust Playground se pr\u00e9sente sous la forme d'un \"\u00e9tabli\" vide sur lequel des objets \u00e9crits en Faust peuvent \u00eatre plac\u00e9s et connect\u00e9s entre-eux. Le bouton \"LIBRARY\" en haut \u00e0 gauche de l'\u00e9cran permet d'avoir acc\u00e8s \u00e0 une collection d'objets Faust pr\u00eat \u00e0 l'emploi : Dans le menu qui s'ouvre, s\u00e9lectionnez le premier \u00e9l\u00e9ment (Kisana) dans la liste \"Instruments\" en cliquant dessus : L'objet Kisana qui est un synth\u00e9tiseur de harpe devrait alors \u00eatre plac\u00e9 sur l'\u00e9tabli. Afin de pouvoir entendre le son qu'il produit, il est n\u00e9cessaire de le connecter au haut-parleur \u00e0 droite de l'\u00e9cran en tirant un c\u00e2ble entre le point rouge de Kisana et le point vert sur le haut-parleur (pour cela, il suffit de maintenir le clique sur le point rouge et de \"tirer\" le c\u00e2ble vers le point vert) : Les trois premiers potentiom\u00e8tres (points verts) de Kisana permettent d'actionner les cordes de la harpe : bougez les et vous devriez entendre du son ! Instruments vs. effets Le menu LIBRARY donne acc\u00e8s \u00e0 deux types d'\u00e9l\u00e9ments : des \"instruments\" qui produisent du son et des \"effets\" qui traitent du son. \u00c0 la diff\u00e9rence des instruments, les effets ont une entr\u00e9e audio mat\u00e9rialis\u00e9e par un point vert \u00e0 leur gauche. Dans le menu LIBRARY s\u00e9lectionn\u00e9 l'effet \"Echo\" et connect\u00e9 le \u00e0 Kisana puis au haut-parleur : Changez ensuite la valeur du param\u00e8tre \"echo intensity\" et vous devriez entendre un \u00e9cho appliqu\u00e9 au son de Kisana. En pratique n'importe quel instrument peut \u00eatre connect\u00e9 \u00e0 n'importe quel effet. De la m\u00eame mani\u00e8re, plusieurs effets peuvent \u00eatre connect\u00e9 entre-eux : N'h\u00e9sitez pas \u00e0 \u00eatre cr\u00e9atif et \u00e0 essayer diff\u00e9rentes combinaisons d'objets ! Exporter un programme vers le Gramophone Tout programme \u00e9crit et fonctionnant dans le Faust Playground peut \u00eatre envoy\u00e9 vers le Gramophone connect\u00e9 \u00e0 l'ordinateur. La page \"programmer le Gramophone\" donne la marche \u00e0 suivre.","title":" Le Faust Playground "},{"location":"faust/playground/#le-faust-playground","text":"Le Faust Playground est un outil en ligne (accessible sur https://faustplayground.grame.fr/ ) permettant d'assembler des programmes \u00e9crits en Faust de mani\u00e8re simple avec une interface graphique. Il peut \u00e9galement exporter les programmes produits vers les diff\u00e9rentes plateformes support\u00e9es par Faust pour cr\u00e9er des applications pour smartphones, programmer le Gramophone, cr\u00e9er des plug-ins audios, etc. Le Faust Playground Bien que le Faust Playground soit compatible avec la plupart des navigateurs web, il est fortement recommand\u00e9 d'utiliser Google Chrome ou Mozilla Firefox.","title":"Le Faust Playground"},{"location":"faust/playground/#produire-du-son","text":"Le Faust Playground se pr\u00e9sente sous la forme d'un \"\u00e9tabli\" vide sur lequel des objets \u00e9crits en Faust peuvent \u00eatre plac\u00e9s et connect\u00e9s entre-eux. Le bouton \"LIBRARY\" en haut \u00e0 gauche de l'\u00e9cran permet d'avoir acc\u00e8s \u00e0 une collection d'objets Faust pr\u00eat \u00e0 l'emploi : Dans le menu qui s'ouvre, s\u00e9lectionnez le premier \u00e9l\u00e9ment (Kisana) dans la liste \"Instruments\" en cliquant dessus : L'objet Kisana qui est un synth\u00e9tiseur de harpe devrait alors \u00eatre plac\u00e9 sur l'\u00e9tabli. Afin de pouvoir entendre le son qu'il produit, il est n\u00e9cessaire de le connecter au haut-parleur \u00e0 droite de l'\u00e9cran en tirant un c\u00e2ble entre le point rouge de Kisana et le point vert sur le haut-parleur (pour cela, il suffit de maintenir le clique sur le point rouge et de \"tirer\" le c\u00e2ble vers le point vert) : Les trois premiers potentiom\u00e8tres (points verts) de Kisana permettent d'actionner les cordes de la harpe : bougez les et vous devriez entendre du son !","title":"Produire du son"},{"location":"faust/playground/#instruments-vs-effets","text":"Le menu LIBRARY donne acc\u00e8s \u00e0 deux types d'\u00e9l\u00e9ments : des \"instruments\" qui produisent du son et des \"effets\" qui traitent du son. \u00c0 la diff\u00e9rence des instruments, les effets ont une entr\u00e9e audio mat\u00e9rialis\u00e9e par un point vert \u00e0 leur gauche. Dans le menu LIBRARY s\u00e9lectionn\u00e9 l'effet \"Echo\" et connect\u00e9 le \u00e0 Kisana puis au haut-parleur : Changez ensuite la valeur du param\u00e8tre \"echo intensity\" et vous devriez entendre un \u00e9cho appliqu\u00e9 au son de Kisana. En pratique n'importe quel instrument peut \u00eatre connect\u00e9 \u00e0 n'importe quel effet. De la m\u00eame mani\u00e8re, plusieurs effets peuvent \u00eatre connect\u00e9 entre-eux : N'h\u00e9sitez pas \u00e0 \u00eatre cr\u00e9atif et \u00e0 essayer diff\u00e9rentes combinaisons d'objets !","title":"Instruments vs. effets"},{"location":"faust/playground/#exporter-un-programme-vers-le-gramophone","text":"Tout programme \u00e9crit et fonctionnant dans le Faust Playground peut \u00eatre envoy\u00e9 vers le Gramophone connect\u00e9 \u00e0 l'ordinateur. La page \"programmer le Gramophone\" donne la marche \u00e0 suivre.","title":"Exporter un programme vers le Gramophone"},{"location":"gramophone/about/","text":"Le Gramophone Le Gramophone est un instrument de musique programmable d\u00e9velopp\u00e9 \u00e0 Grame dans le cadre du projet AmStramGrame. \u00c0 l'instar des instruments de musique acoustiques \"traditionnels\" comme la trompette, le tabla ou le violon, il permet de produire du son, d'\u00eatre contr\u00f4l\u00e9 par un musicien et est compl\u00e8tement ind\u00e9pendant (il n'a pas besoin d'\u00eatre branch\u00e9 avec un c\u00e2ble pour fonctionner). \u00c0 l'inverse des instruments acoustiques, le son qu'il produit et son comportement sont compl\u00e8tement mall\u00e9ables et peuvent \u00eatre d\u00e9crits par la programmation informatique gr\u00e2ce au langage Faust . Fonctionnement du Gramophone Vue d'ensemble Le Gramophone est compos\u00e9 d'une coque en plastique, d'un haut-parleur, d'un ordinateur embarqu\u00e9, d'une batterie et de capteurs (acc\u00e9l\u00e9rom\u00e8tre, gyroscope, boussole, boutons, potentiom\u00e8tres et photor\u00e9sistance) . TODO: pics with components (bien parler de bouton assignable). Programmation du Gramophone Le Gramophone se programme via un c\u00e2ble USB connect\u00e9 \u00e0 un ordinateur. Le langage Faust peut \u00eatre utilis\u00e9 pour programmer le Gramophone gr\u00e2ce aux plateformes Faust Playground (programmation graphique pour les d\u00e9butants) et Faust Web IDE (programmation \u00e9crites/script\u00e9es). Pour que cela fonctionne, il est n\u00e9cessaire d'installer l'application GramoLoader sur sa machine qui permet de faire le lien entre le navigateur Web et le gramophone. Programmation du Gramophone Le tutoriel Programmer le Gramophone donne plus d\u00e9tails sur la programmation du Gramophone. Fonctionnement du Gramophone D\u00e9marrage du Gramophone Le Gramophone abrite un interrupteur qui permet de le d\u00e9marrer et de l'arr\u00eater. Cet interrupteur a trois positions pour s\u00e9lectionner le mode de fonctionnement : en position centrale, le Gramophone est \u00e0 l'arr\u00eat ; lorsqu'il est enclench\u00e9 \u00e0 gauche, le Gramophone est d\u00e9marr\u00e9 en \"mode programmation\" ; lorsqu'il est enclench\u00e9 \u00e0 droite, le Gramophone est d\u00e9marr\u00e9 en \"mode jeu\" : il produit du son. TODO: pic of the switch Le \"mode programmation\" doit \u00eatre activ\u00e9 pour pouvoir programmer le Gramophone depuis le Faust Web IDE ou le Faust Playground via l'application GramoLoader . Le \"mode jeu\" doit \u00eatre s\u00e9lectionn\u00e9 pour pouvoir executer les programmes install\u00e9s sur le Gramophone. Il est n\u00e9cessaire de presser/appuyer sur la molette de changement de programme pour acter le lancement du premier programme Faust install\u00e9 sur le Gramophone : Tenir le Gramophone Le Gramophone se tient dans la paume de la main droite avec la sangle autour de la main. Cette derni\u00e8re peut \u00eatre ajust\u00e9e afin de tenir le Gramophone fermement. Il est important de noter que la sangle n'est pas plac\u00e9e sur le Gramophone de mani\u00e8re sym\u00e9trique : la photor\u00e9sistance doit tomber sous le pouce et le bouton assignable sous le majeur : Contr\u00f4le du volume Le volume du son produit par le Gramophone peut \u00eatre contr\u00f4l\u00e9 par le potentiom\u00e8tre se trouvant juste au-dessus de la prise jack (celui qui se trouve en bas de la main lorsque l'on tient le Gramophone) : TODO: pic Il est important de noter que le volume du son produit d\u00e9pend aussi fortement du programme ex\u00e9cut\u00e9 sur le Gramophone. Contr\u00f4le des param\u00e8tres du son Le son produit par le Gramophone peut-\u00eatre contr\u00f4l\u00e9 \u00e0 l'aide de diff\u00e9rents \u00e9l\u00e9ments d'interface. Chacun d'entre-eux peut \u00eatre assign\u00e9 directement dans un programme Faust \u00e0 un param\u00e8tre du son \u00e0 l'aide de m\u00e9tadatas (le fonctionnement des m\u00e9tadata dans Faust est d\u00e9taill\u00e9 dans TODO). Le bouton assignable Le bouton assignable du Gramophone se trouve \u00e0 l'oppos\u00e9e du potentiom\u00e8tre de volume et tombe sous la majeur du musicien : Il est adressable dans un programme Faust \u00e0 l'aide de la m\u00e9tadata suivante : [switch:1] Le potentiom\u00e8tre assignable La potentiom\u00e8tre assignable du Gramophone se trouve juste \u00e0 gauche du bouton assignable : Il est \"typiquement\" actionn\u00e9 par la main gauche de l'instrumentiste. Ce potentiom\u00e8tre est adressable dans un programme Faust \u00e0 l'aide de la m\u00e9tadata suivante : [knob:2] La photor\u00e9sistance Le photor\u00e9sistance assignable du Gramophone se trouve juste \u00e0 gauche du potentiom\u00e8tre assignable et tombe sous le pouce de l'instrumentiste : Elle est adressable dans un programme Faust \u00e0 l'aide de la m\u00e9tadata suivante : [knob:2] . Les capteurs de mouvements Le Gramophone abrite un acc\u00e9l\u00e9rom\u00e8tre et un gyroscope qui peuvent \u00eatre utilis\u00e9s pour contr\u00f4ler les param\u00e8tres d'un programme Faust avec le geste. >> Les informations donn\u00e9es dans cette section se veulent \u00eatre tr\u00e8s techniques. Pour un tutoriel pas-\u00e0-pas sur l'utilisation des capteurs de mouvements du Gramophone, clique sur ce lien . L'acc\u00e9l\u00e9ration (acc\u00e9l\u00e9rom\u00e8tre) et l'orientation (gyroscope) du Gramophone peuvent \u00eatre mesur\u00e9es sur trois axes diff\u00e9rents (X, Y et Z) : Inclinaison du Gramophone sur l'axe des X Inclinaison du Gramophone sur l'axe des Y L'axe des Z du Gramophone Des m\u00e9tadatas Faust peuvent \u00eatre utilis\u00e9es pour associer et configurer l'acc\u00e9l\u00e9rom\u00e8tre et le gyroscope du Gramophone \u00e0 un param\u00e8tre d'un programme Faust : [acc: a b c d e] pour l'acc\u00e9l\u00e9rom\u00e8tre et : [gyr: a b c d e] pour le gyroscope, avec : a : l'axe de l'acc\u00e9l\u00e9rom\u00e8tre ( 0 : X, 1 : Y, 2 : Z) b : la courbe de l'acc\u00e9l\u00e9rom\u00e8tre (voir la figure ci-dessous, 4 courbes sont disponibles) c : l\u2019acc\u00e9l\u00e9ration minimale en m/s^2 d : l\u2019acc\u00e9l\u00e9ration centrale en m/s^2 e : l\u2019acc\u00e9l\u00e9ration maximale en m/s^2 c , d et e sont directement associ\u00e9s \u00e0 la configuration d'un param\u00e8tre d'un programme Faust : parameter = nentry(\"ParamFaust[acc: a b c d e]\",def,min,max,step); c est associ\u00e9 \u00e0 min d est associ\u00e9 \u00e0 def e est associ\u00e9 \u00e0 max Configuration de l'acc\u00e9l\u00e9rom\u00e8tre et du gyroscope du Gramophone Par exemple, le gain d'un synth\u00e9tiseur peut \u00eatre contr\u00f4l\u00e9 avec l'axe X de l'acc\u00e9l\u00e9rom\u00e8tre de la mani\u00e8re suivante : g = nentry(\"gain[acc: 0 0 -10 0 10]\",0.5,0,1,0.01); Avec cette configuration, g = 0 lorsque le Gramophone est inclin\u00e9 \u00e0 90 degr\u00e9s du c\u00f4t\u00e9 gauche, g = 0.5 lorsque le Gramophone est maintenue droit, haut-parleur pointant vers le bas et g = 1 lorsque le Gramophone est inclin\u00e9 \u00e0 90 degr\u00e9s du c\u00f4t\u00e9 droit. Autre exemple : g = nentry(\"gain[acc: 0 0 0 0 10]\",0,0,1,0.01); Avec cette configuration, g = 0 lorsque le Gramophone est inclin\u00e9 \u00e0 90 degr\u00e9s du c\u00f4t\u00e9 gauche et lorsque le Gramophone est maintenue droit, haut-parleur pointant vers le bas. La valeur de g augmente au fur et \u00e0 mesure que le Gramophone est inclin\u00e9 vers la droite. g = 1 lorsque le Gramophone est inclin\u00e9 \u00e0 90 degr\u00e9s du c\u00f4t\u00e9 droit. Charger le Gramophone Pour charger la batterie du Gramophone, il suffit de le brancher \u00e0 un chargeur USB ou \u00e0 un ordinateur. Pour que la charge puisse s'effectuer, il est n\u00e9cessaire de mettre le Gramophone en mode \"jeu\" ou \"programmation\" : le Gramophone ne se chargera pas s'il est \u00e9teint ! L'autonomie du Gramophone d\u00e9pend de la complexit\u00e9 du programme ex\u00e9cut\u00e9, de la sant\u00e9 de la batterie, et du temps de charge. Il faut compter environ deux heures pour une charge compl\u00e8te. Passer d'un programme \u00e0 l'autre Plusieurs programmes Faust peuvent \u00eatre install\u00e9s sur un seul Gramophone. Pour passer d'un programme \u00e0 un autre, il suffit de tourner la molette noire plac\u00e9e en bas du Gramophone : Les programmes sont s\u00e9lectionn\u00e9s en boucle. Lorsque le Gramophone est d\u00e9marr\u00e9 en mode \"jeu\" , le premier programme est toujours s\u00e9lectionn\u00e9. Pour passer au deuxi\u00e8me programme, il suffit de tourner la molette vers la droite. Pour revenir en arri\u00e8re, il faut la tourner vers la gauche. Une fois arriv\u00e9 au dernier programme, tourner la molette vers la droite fait automatiquement revenir au premier programme, etc. M\u00e9tadatas de programmation du Gramophone \u00c9l\u00e9ment M\u00e9tadata Description Bouton [switch:1] Bouton en haut du Gramophone : d\u00e9livre 1 lorsqu'il est press\u00e9 et 0 lorsqu'il ne l'est pas. Potentiom\u00e8tre [knob:2] Potentiom\u00e8tre entre le bouton et la photor\u00e9sistance. Fourni un contr\u00f4le continu. Photor\u00e9sistance [knob:3] Photor\u00e9sistance en dessous du potentiom\u00e8tre assignable. Fourni un contr\u00f4le continu. Acc\u00e9l\u00e9rom\u00e8tre [acc: XXX] Acc\u00e9l\u00e9rom\u00e8tre int\u00e9gr\u00e9 au Gramophone. Fourni un contr\u00f4le continu. XXX correspond au param\u00e8tre de configuration de l'acc\u00e9l\u00e9rom\u00e8tre. Gyroscope [gyr: XXX] Gyroscope int\u00e9gr\u00e9 au Gramophone. Fourni un contr\u00f4le continu. XXX correspond au param\u00e8tre de configuration de l'acc\u00e9l\u00e9rom\u00e8tre. Aller plus loin : fabriquer son propre Gramophone ! Le Gramophone n'est pour l'instant pas disponible \u00e0 la vente. En revanche, il est possible de fabriquer son propre Gramophone ! Pour savoir comment faire, n'h\u00e9sites pas \u00e0 lire le tutoriel : Fabriquer son propre Gramophone !","title":" Qu&#39;est-ce que c&#39;est ? "},{"location":"gramophone/about/#le-gramophone","text":"Le Gramophone est un instrument de musique programmable d\u00e9velopp\u00e9 \u00e0 Grame dans le cadre du projet AmStramGrame. \u00c0 l'instar des instruments de musique acoustiques \"traditionnels\" comme la trompette, le tabla ou le violon, il permet de produire du son, d'\u00eatre contr\u00f4l\u00e9 par un musicien et est compl\u00e8tement ind\u00e9pendant (il n'a pas besoin d'\u00eatre branch\u00e9 avec un c\u00e2ble pour fonctionner). \u00c0 l'inverse des instruments acoustiques, le son qu'il produit et son comportement sont compl\u00e8tement mall\u00e9ables et peuvent \u00eatre d\u00e9crits par la programmation informatique gr\u00e2ce au langage Faust . Fonctionnement du Gramophone","title":"Le Gramophone"},{"location":"gramophone/about/#vue-densemble","text":"Le Gramophone est compos\u00e9 d'une coque en plastique, d'un haut-parleur, d'un ordinateur embarqu\u00e9, d'une batterie et de capteurs (acc\u00e9l\u00e9rom\u00e8tre, gyroscope, boussole, boutons, potentiom\u00e8tres et photor\u00e9sistance) . TODO: pics with components (bien parler de bouton assignable).","title":"Vue d'ensemble"},{"location":"gramophone/about/#programmation-du-gramophone","text":"Le Gramophone se programme via un c\u00e2ble USB connect\u00e9 \u00e0 un ordinateur. Le langage Faust peut \u00eatre utilis\u00e9 pour programmer le Gramophone gr\u00e2ce aux plateformes Faust Playground (programmation graphique pour les d\u00e9butants) et Faust Web IDE (programmation \u00e9crites/script\u00e9es). Pour que cela fonctionne, il est n\u00e9cessaire d'installer l'application GramoLoader sur sa machine qui permet de faire le lien entre le navigateur Web et le gramophone. Programmation du Gramophone Le tutoriel Programmer le Gramophone donne plus d\u00e9tails sur la programmation du Gramophone.","title":"Programmation du Gramophone"},{"location":"gramophone/about/#fonctionnement-du-gramophone","text":"","title":"Fonctionnement du Gramophone"},{"location":"gramophone/about/#demarrage-du-gramophone","text":"Le Gramophone abrite un interrupteur qui permet de le d\u00e9marrer et de l'arr\u00eater. Cet interrupteur a trois positions pour s\u00e9lectionner le mode de fonctionnement : en position centrale, le Gramophone est \u00e0 l'arr\u00eat ; lorsqu'il est enclench\u00e9 \u00e0 gauche, le Gramophone est d\u00e9marr\u00e9 en \"mode programmation\" ; lorsqu'il est enclench\u00e9 \u00e0 droite, le Gramophone est d\u00e9marr\u00e9 en \"mode jeu\" : il produit du son. TODO: pic of the switch Le \"mode programmation\" doit \u00eatre activ\u00e9 pour pouvoir programmer le Gramophone depuis le Faust Web IDE ou le Faust Playground via l'application GramoLoader . Le \"mode jeu\" doit \u00eatre s\u00e9lectionn\u00e9 pour pouvoir executer les programmes install\u00e9s sur le Gramophone. Il est n\u00e9cessaire de presser/appuyer sur la molette de changement de programme pour acter le lancement du premier programme Faust install\u00e9 sur le Gramophone :","title":"D\u00e9marrage du Gramophone"},{"location":"gramophone/about/#tenir-le-gramophone","text":"Le Gramophone se tient dans la paume de la main droite avec la sangle autour de la main. Cette derni\u00e8re peut \u00eatre ajust\u00e9e afin de tenir le Gramophone fermement. Il est important de noter que la sangle n'est pas plac\u00e9e sur le Gramophone de mani\u00e8re sym\u00e9trique : la photor\u00e9sistance doit tomber sous le pouce et le bouton assignable sous le majeur :","title":"Tenir le Gramophone"},{"location":"gramophone/about/#controle-du-volume","text":"Le volume du son produit par le Gramophone peut \u00eatre contr\u00f4l\u00e9 par le potentiom\u00e8tre se trouvant juste au-dessus de la prise jack (celui qui se trouve en bas de la main lorsque l'on tient le Gramophone) : TODO: pic Il est important de noter que le volume du son produit d\u00e9pend aussi fortement du programme ex\u00e9cut\u00e9 sur le Gramophone.","title":"Contr\u00f4le du volume"},{"location":"gramophone/about/#controle-des-parametres-du-son","text":"Le son produit par le Gramophone peut-\u00eatre contr\u00f4l\u00e9 \u00e0 l'aide de diff\u00e9rents \u00e9l\u00e9ments d'interface. Chacun d'entre-eux peut \u00eatre assign\u00e9 directement dans un programme Faust \u00e0 un param\u00e8tre du son \u00e0 l'aide de m\u00e9tadatas (le fonctionnement des m\u00e9tadata dans Faust est d\u00e9taill\u00e9 dans TODO).","title":"Contr\u00f4le des param\u00e8tres du son"},{"location":"gramophone/about/#le-bouton-assignable","text":"Le bouton assignable du Gramophone se trouve \u00e0 l'oppos\u00e9e du potentiom\u00e8tre de volume et tombe sous la majeur du musicien : Il est adressable dans un programme Faust \u00e0 l'aide de la m\u00e9tadata suivante : [switch:1]","title":"Le bouton assignable"},{"location":"gramophone/about/#le-potentiometre-assignable","text":"La potentiom\u00e8tre assignable du Gramophone se trouve juste \u00e0 gauche du bouton assignable : Il est \"typiquement\" actionn\u00e9 par la main gauche de l'instrumentiste. Ce potentiom\u00e8tre est adressable dans un programme Faust \u00e0 l'aide de la m\u00e9tadata suivante : [knob:2]","title":"Le potentiom\u00e8tre assignable"},{"location":"gramophone/about/#la-photoresistance","text":"Le photor\u00e9sistance assignable du Gramophone se trouve juste \u00e0 gauche du potentiom\u00e8tre assignable et tombe sous le pouce de l'instrumentiste : Elle est adressable dans un programme Faust \u00e0 l'aide de la m\u00e9tadata suivante : [knob:2] .","title":"La photor\u00e9sistance"},{"location":"gramophone/about/#les-capteurs-de-mouvements","text":"Le Gramophone abrite un acc\u00e9l\u00e9rom\u00e8tre et un gyroscope qui peuvent \u00eatre utilis\u00e9s pour contr\u00f4ler les param\u00e8tres d'un programme Faust avec le geste. >> Les informations donn\u00e9es dans cette section se veulent \u00eatre tr\u00e8s techniques. Pour un tutoriel pas-\u00e0-pas sur l'utilisation des capteurs de mouvements du Gramophone, clique sur ce lien . L'acc\u00e9l\u00e9ration (acc\u00e9l\u00e9rom\u00e8tre) et l'orientation (gyroscope) du Gramophone peuvent \u00eatre mesur\u00e9es sur trois axes diff\u00e9rents (X, Y et Z) : Inclinaison du Gramophone sur l'axe des X Inclinaison du Gramophone sur l'axe des Y L'axe des Z du Gramophone Des m\u00e9tadatas Faust peuvent \u00eatre utilis\u00e9es pour associer et configurer l'acc\u00e9l\u00e9rom\u00e8tre et le gyroscope du Gramophone \u00e0 un param\u00e8tre d'un programme Faust : [acc: a b c d e] pour l'acc\u00e9l\u00e9rom\u00e8tre et : [gyr: a b c d e] pour le gyroscope, avec : a : l'axe de l'acc\u00e9l\u00e9rom\u00e8tre ( 0 : X, 1 : Y, 2 : Z) b : la courbe de l'acc\u00e9l\u00e9rom\u00e8tre (voir la figure ci-dessous, 4 courbes sont disponibles) c : l\u2019acc\u00e9l\u00e9ration minimale en m/s^2 d : l\u2019acc\u00e9l\u00e9ration centrale en m/s^2 e : l\u2019acc\u00e9l\u00e9ration maximale en m/s^2 c , d et e sont directement associ\u00e9s \u00e0 la configuration d'un param\u00e8tre d'un programme Faust : parameter = nentry(\"ParamFaust[acc: a b c d e]\",def,min,max,step); c est associ\u00e9 \u00e0 min d est associ\u00e9 \u00e0 def e est associ\u00e9 \u00e0 max Configuration de l'acc\u00e9l\u00e9rom\u00e8tre et du gyroscope du Gramophone Par exemple, le gain d'un synth\u00e9tiseur peut \u00eatre contr\u00f4l\u00e9 avec l'axe X de l'acc\u00e9l\u00e9rom\u00e8tre de la mani\u00e8re suivante : g = nentry(\"gain[acc: 0 0 -10 0 10]\",0.5,0,1,0.01); Avec cette configuration, g = 0 lorsque le Gramophone est inclin\u00e9 \u00e0 90 degr\u00e9s du c\u00f4t\u00e9 gauche, g = 0.5 lorsque le Gramophone est maintenue droit, haut-parleur pointant vers le bas et g = 1 lorsque le Gramophone est inclin\u00e9 \u00e0 90 degr\u00e9s du c\u00f4t\u00e9 droit. Autre exemple : g = nentry(\"gain[acc: 0 0 0 0 10]\",0,0,1,0.01); Avec cette configuration, g = 0 lorsque le Gramophone est inclin\u00e9 \u00e0 90 degr\u00e9s du c\u00f4t\u00e9 gauche et lorsque le Gramophone est maintenue droit, haut-parleur pointant vers le bas. La valeur de g augmente au fur et \u00e0 mesure que le Gramophone est inclin\u00e9 vers la droite. g = 1 lorsque le Gramophone est inclin\u00e9 \u00e0 90 degr\u00e9s du c\u00f4t\u00e9 droit.","title":"Les capteurs de mouvements"},{"location":"gramophone/about/#charger-le-gramophone","text":"Pour charger la batterie du Gramophone, il suffit de le brancher \u00e0 un chargeur USB ou \u00e0 un ordinateur. Pour que la charge puisse s'effectuer, il est n\u00e9cessaire de mettre le Gramophone en mode \"jeu\" ou \"programmation\" : le Gramophone ne se chargera pas s'il est \u00e9teint ! L'autonomie du Gramophone d\u00e9pend de la complexit\u00e9 du programme ex\u00e9cut\u00e9, de la sant\u00e9 de la batterie, et du temps de charge. Il faut compter environ deux heures pour une charge compl\u00e8te.","title":"Charger le Gramophone"},{"location":"gramophone/about/#passer-dun-programme-a-lautre","text":"Plusieurs programmes Faust peuvent \u00eatre install\u00e9s sur un seul Gramophone. Pour passer d'un programme \u00e0 un autre, il suffit de tourner la molette noire plac\u00e9e en bas du Gramophone : Les programmes sont s\u00e9lectionn\u00e9s en boucle. Lorsque le Gramophone est d\u00e9marr\u00e9 en mode \"jeu\" , le premier programme est toujours s\u00e9lectionn\u00e9. Pour passer au deuxi\u00e8me programme, il suffit de tourner la molette vers la droite. Pour revenir en arri\u00e8re, il faut la tourner vers la gauche. Une fois arriv\u00e9 au dernier programme, tourner la molette vers la droite fait automatiquement revenir au premier programme, etc.","title":"Passer d'un programme \u00e0 l'autre"},{"location":"gramophone/about/#metadatas-de-programmation-du-gramophone","text":"\u00c9l\u00e9ment M\u00e9tadata Description Bouton [switch:1] Bouton en haut du Gramophone : d\u00e9livre 1 lorsqu'il est press\u00e9 et 0 lorsqu'il ne l'est pas. Potentiom\u00e8tre [knob:2] Potentiom\u00e8tre entre le bouton et la photor\u00e9sistance. Fourni un contr\u00f4le continu. Photor\u00e9sistance [knob:3] Photor\u00e9sistance en dessous du potentiom\u00e8tre assignable. Fourni un contr\u00f4le continu. Acc\u00e9l\u00e9rom\u00e8tre [acc: XXX] Acc\u00e9l\u00e9rom\u00e8tre int\u00e9gr\u00e9 au Gramophone. Fourni un contr\u00f4le continu. XXX correspond au param\u00e8tre de configuration de l'acc\u00e9l\u00e9rom\u00e8tre. Gyroscope [gyr: XXX] Gyroscope int\u00e9gr\u00e9 au Gramophone. Fourni un contr\u00f4le continu. XXX correspond au param\u00e8tre de configuration de l'acc\u00e9l\u00e9rom\u00e8tre.","title":"M\u00e9tadatas de programmation du Gramophone"},{"location":"gramophone/about/#aller-plus-loin-fabriquer-son-propre-gramophone","text":"Le Gramophone n'est pour l'instant pas disponible \u00e0 la vente. En revanche, il est possible de fabriquer son propre Gramophone ! Pour savoir comment faire, n'h\u00e9sites pas \u00e0 lire le tutoriel : Fabriquer son propre Gramophone !","title":"Aller plus loin : fabriquer son propre Gramophone !"},{"location":"gramophone/loader/","text":"L'application GramoLoader L'application GramoLoader permet de facilement installer des programmes \u00e9crits avec le langage de programmation Faust sur le Gramophone. Elle a \u00e9t\u00e9 sp\u00e9cialement con\u00e7ue pour \u00eatre utilis\u00e9e en tandem avec le Faust Web IDE ou le Faust Playground (voir le tutoriel Programmer le Gramophone ). Fonctionnement Le Faust Web IDE et le Faust Playground g\u00e9n\u00e8rent un fichier appel\u00e9 binary.zip lorsque le bouton \"Gramophone\" est press\u00e9. Une fois t\u00e9l\u00e9charg\u00e9 sur l'ordinateur (g\u00e9n\u00e9ralement dans le dossier t\u00e9l\u00e9chargement), ce fichier peut \u00eatre s\u00e9lectionn\u00e9 avec l'application GramoLoader en cliquant sur le bouton \"S\u00e9lectionner un fichier\" pour le transmettre au Gramophone : Programmation du Gramophone Pour que cela fonctionne, il est n\u00e9cessaire que le Gramophone soit connect\u00e9 \u00e0 l'ordinateur avec un c\u00e2ble USB et qu'il soit mis en mode programmation . Une fois s\u00e9lectionn\u00e9, toute nouvelle version de binary.zip \u00e9tant t\u00e9l\u00e9charg\u00e9e sur l'ordinateur sera automatiquement envoy\u00e9e au Gramophone. L'application GramoLoader doit \u00e9videmment rester ouverte pour que cela fonctionne. Le bouton \"R\u00e9essayer\" permet de r\u00e9initialiser l'envoi de binary.zip au Gramophone. Le bouton \"QUITTER\" permet de quitter l'application. T\u00e9l\u00e9chargement/Installation L'application GramoLoader est t\u00e9l\u00e9chargeable gratuitement depuis ce site et est disponible pour Windows, MacOS et Linux. Windows >> T\u00e9l\u00e9charger GramoLoader pour Windows << Sous Windows, GramoLoader se pr\u00e9sente sous la forme d'un fichier .exe . Ce dernier peut \u00eatre plac\u00e9 n'importe o\u00f9 sur l'ordinateur. Il suffit de le lancer pour d\u00e9marrer l'application. MacOS >> T\u00e9l\u00e9charger GramoLoader pour MacOS << Sous MacOS, GramoLoader se pr\u00e9sente sous la forme d'un fichier .app . Ce dernier peut \u00eatre plac\u00e9 n'importe o\u00f9 sur l'ordinateur (dans le dossier \"Applications\", par exemple). Il suffit de le lancer pour d\u00e9marrer l'application. Linux (Sources) Il n'existe pas de version pr\u00e9-compil\u00e9e de GramoLoader pour Linux. \u00c0 l'inverse, les sources de l'application peuvent \u00eatre trouv\u00e9es directement sur le Git d'AmStramGrame : https://github.com/amstramgrame/amstramgrame/tree/master/gramophone/autoloader puis lanc\u00e9es en ligne de commande avec : python3 src/FlashAppAsync.py","title":" Le GramoLoader "},{"location":"gramophone/loader/#lapplication-gramoloader","text":"L'application GramoLoader permet de facilement installer des programmes \u00e9crits avec le langage de programmation Faust sur le Gramophone. Elle a \u00e9t\u00e9 sp\u00e9cialement con\u00e7ue pour \u00eatre utilis\u00e9e en tandem avec le Faust Web IDE ou le Faust Playground (voir le tutoriel Programmer le Gramophone ).","title":"L'application GramoLoader"},{"location":"gramophone/loader/#fonctionnement","text":"Le Faust Web IDE et le Faust Playground g\u00e9n\u00e8rent un fichier appel\u00e9 binary.zip lorsque le bouton \"Gramophone\" est press\u00e9. Une fois t\u00e9l\u00e9charg\u00e9 sur l'ordinateur (g\u00e9n\u00e9ralement dans le dossier t\u00e9l\u00e9chargement), ce fichier peut \u00eatre s\u00e9lectionn\u00e9 avec l'application GramoLoader en cliquant sur le bouton \"S\u00e9lectionner un fichier\" pour le transmettre au Gramophone : Programmation du Gramophone Pour que cela fonctionne, il est n\u00e9cessaire que le Gramophone soit connect\u00e9 \u00e0 l'ordinateur avec un c\u00e2ble USB et qu'il soit mis en mode programmation . Une fois s\u00e9lectionn\u00e9, toute nouvelle version de binary.zip \u00e9tant t\u00e9l\u00e9charg\u00e9e sur l'ordinateur sera automatiquement envoy\u00e9e au Gramophone. L'application GramoLoader doit \u00e9videmment rester ouverte pour que cela fonctionne. Le bouton \"R\u00e9essayer\" permet de r\u00e9initialiser l'envoi de binary.zip au Gramophone. Le bouton \"QUITTER\" permet de quitter l'application.","title":"Fonctionnement"},{"location":"gramophone/loader/#telechargementinstallation","text":"L'application GramoLoader est t\u00e9l\u00e9chargeable gratuitement depuis ce site et est disponible pour Windows, MacOS et Linux.","title":"T\u00e9l\u00e9chargement/Installation"},{"location":"gramophone/loader/#windows","text":">> T\u00e9l\u00e9charger GramoLoader pour Windows << Sous Windows, GramoLoader se pr\u00e9sente sous la forme d'un fichier .exe . Ce dernier peut \u00eatre plac\u00e9 n'importe o\u00f9 sur l'ordinateur. Il suffit de le lancer pour d\u00e9marrer l'application.","title":"Windows"},{"location":"gramophone/loader/#macos","text":">> T\u00e9l\u00e9charger GramoLoader pour MacOS << Sous MacOS, GramoLoader se pr\u00e9sente sous la forme d'un fichier .app . Ce dernier peut \u00eatre plac\u00e9 n'importe o\u00f9 sur l'ordinateur (dans le dossier \"Applications\", par exemple). Il suffit de le lancer pour d\u00e9marrer l'application.","title":"MacOS"},{"location":"gramophone/loader/#linux-sources","text":"Il n'existe pas de version pr\u00e9-compil\u00e9e de GramoLoader pour Linux. \u00c0 l'inverse, les sources de l'application peuvent \u00eatre trouv\u00e9es directement sur le Git d'AmStramGrame : https://github.com/amstramgrame/amstramgrame/tree/master/gramophone/autoloader puis lanc\u00e9es en ligne de commande avec : python3 src/FlashAppAsync.py","title":"Linux (Sources)"},{"location":"gramophone/making/","text":"Tutoriel : fabriquer son propre Gramophone ! TODO","title":" Fabriquer le Gramophone "},{"location":"gramophone/making/#tutoriel-fabriquer-son-propre-gramophone","text":"TODO","title":"Tutoriel : fabriquer son propre Gramophone !"},{"location":"gramophone/programming/","text":"Programmer le Gramophone Dans ce court tutoriel, nous montrons comment programmer le Gramophone avec le Faust Web IDE et le Faust Playground . Avec le Faust Web IDE Avant de d\u00e9buter ce tutoriel, il est recommand\u00e9 de lire la page sur le Faust Web IDE . Prenons un programme Faust tr\u00e8s simple qui produit une onde en dent de scie : import(\"stdfaust.lib\"); freq = 440; process = os.sawtooth(freq); \u00c9diter/ex\u00e9cuter le programme >> Clique sur le bouton \"\u00c9diter/ex\u00e9cuter le programme\" pour ouvrir le programme ci-dessus dans le Faust Web IDE. Il peut alors \u00eatre ex\u00e9cut\u00e9 directement dans le navigateur Web en suivant la proc\u00e9dure indiqu\u00e9e ici . Pour charger ce programme sur le Gramophone, il suffit de cliquer dans un premier temps sur le bouton \"Gramo\" dans l'IDE : Cela lance la \"fabrication\" du programme et apr\u00e8s un quinzaine de seconde, il devrait \u00eatre automatiquement t\u00e9l\u00e9charg\u00e9 sur ton ordinateur sous la forme d'un fichier appel\u00e9 binary.zip . Si le t\u00e9l\u00e9chargement ne se lance pas, il est possible que ce dernier soit bloqu\u00e9 par ton navigateur Web. Une fois que binary.zip est t\u00e9l\u00e9charg\u00e9, connecte le Gramophone \u00e0 ton ordinateur puis lance l'application GramoLoader . Assure-toi que ton Gramophone est en \"mode programmation\" (l'interrupteur de mise en route du Gramophone doit-\u00eatre plac\u00e9 \u00e0 gauche). Ensuite, s\u00e9lectionne le fichier binary.zip sur l'ordinateur en cliquant sur le bouton \"S\u00e9lectionner un fichier\" : Le programme devrait alors \u00eatre envoy\u00e9 sur le Gramophone. Cette op\u00e9ration prend g\u00e9n\u00e9ralement une quinzaine de secondes. Si tout s'est bien pass\u00e9, le Gramophone devrait \u00eatre pr\u00eat \u00e0 ex\u00e9cuter le programme. Pour cela, il suffit de mettre le Gramophone en \"mode jeu\" en pla\u00e7ant l'interrupteur de d\u00e9marrage \u00e0 droite et en pressant ensuite bri\u00e8vement la mollette de s\u00e9lection des programmes Faust une fois. Un son correspondant \u00e0 l'onde en dent de scie impl\u00e9ment\u00e9e lors de l'\u00e9tape pr\u00e9c\u00e9dente devrait alors \u00eatre \u00e9mis. Le volume du son produit peut \u00eatre contr\u00f4l\u00e9 avec le potentiom\u00e8tre de contr\u00f4le du volume du Gramophone . Pour modifier le programme, il suffit de changer le code dans le Faust Web IDE et de rappuyer sur le bouton \"Gramo\" : rien d'autre \u00e0 faire, le programme GramoLoader se charge de tout ! Comme le programme Faust pr\u00e9sent\u00e9 au d\u00e9but de cette section ne contient aucun param\u00e8tre, il n'est actuellement pas possible d\u2019interagir avec ce dernier. Pour apprendre \u00e0 contr\u00f4ler un programme Faust avec le Gramophone, tu peux maintenant lire le scenario : Hello World : mon premier programme pour Gramophone . Avec le Faust Playground Avant de d\u00e9buter ce tutoriel, il est recommand\u00e9 de lire la page sur le Faust Playground . Construisons tout d'abord un programme tr\u00e8s simple dans le Faust Playground en connectant par exemple une harpe \"Kisana\" (instrument) \u00e0 un Echo (effet) : Du son devrait \u00eatre produit en d\u00e9pla\u00e7ant les potentiom\u00e8tres \"1 (Note 48)\", \"2 (Note 60)\" ou \"3 (Note 72)\" de Kisana. Pour installer ce programme sur le Gramophone, il faut dans un premier temps cliquer sur le bouton \"EXPORT\" dans le menu en haut de la fen\u00eatre : puis sur le bouton \"+ d'options\" : Dans les menus qui s'affichent, s\u00e9lectionne \"esp32\" dans le menu du haut et \"gramophoneFlash\" dans le deuxi\u00e8me, puis clique sur le bouton \"Export\" : Apr\u00e8s un quinzaine de secondes, un bouton \"Download\" devrait s'afficher dans le menu de gauche, clique dessus pour t\u00e9l\u00e9charger le fichier binary.zip contenant le programme du Gramophone sur ton ordinateur : Une fois que binary.zip est t\u00e9l\u00e9charg\u00e9, connecte le Gramophone \u00e0 ton ordinateur puis lance l'application GramoLoader . Assure-toi que ton Gramophone est en \"mode programmation\" (l'interrupteur de mise en route du Gramophone doit-\u00eatre plac\u00e9 \u00e0 gauche). Ensuite, s\u00e9lectionne le fichier binary.zip sur l'ordinateur en cliquant sur le bouton \"S\u00e9lectionner un fichier\" : Le programme devrait alors \u00eatre envoy\u00e9 sur le Gramophone. Cette op\u00e9ration prend g\u00e9n\u00e9ralement une quinzaine de secondes. Si tout s'est bien pass\u00e9, le Gramophone devrait \u00eatre pr\u00eat \u00e0 ex\u00e9cuter le programme. Pour cela, il suffit de mettre le Gramophone en \"mode jeu\" en pla\u00e7ant l'interrupteur de d\u00e9marrage \u00e0 droite et en pressant ensuite bri\u00e8vement la mollette de s\u00e9lection des programmes Faust une fois. Un son correspondant au programme cr\u00e9\u00e9 dans le Faust Playground lors de l'\u00e9tape pr\u00e9c\u00e9dente devrait alors \u00eatre \u00e9mis. Pour modifier le programme, il suffit de changer le patch dans le Faust Playground et de re-g\u00e9n\u00e9rer une fichier binary.zip : rien d'autre \u00e0 faire, le programme GramoLoader se charge de tout !","title":" Programmer le Gramophone "},{"location":"gramophone/programming/#programmer-le-gramophone","text":"Dans ce court tutoriel, nous montrons comment programmer le Gramophone avec le Faust Web IDE et le Faust Playground .","title":"Programmer le Gramophone"},{"location":"gramophone/programming/#avec-le-faust-web-ide","text":"Avant de d\u00e9buter ce tutoriel, il est recommand\u00e9 de lire la page sur le Faust Web IDE . Prenons un programme Faust tr\u00e8s simple qui produit une onde en dent de scie : import(\"stdfaust.lib\"); freq = 440; process = os.sawtooth(freq); \u00c9diter/ex\u00e9cuter le programme >> Clique sur le bouton \"\u00c9diter/ex\u00e9cuter le programme\" pour ouvrir le programme ci-dessus dans le Faust Web IDE. Il peut alors \u00eatre ex\u00e9cut\u00e9 directement dans le navigateur Web en suivant la proc\u00e9dure indiqu\u00e9e ici . Pour charger ce programme sur le Gramophone, il suffit de cliquer dans un premier temps sur le bouton \"Gramo\" dans l'IDE : Cela lance la \"fabrication\" du programme et apr\u00e8s un quinzaine de seconde, il devrait \u00eatre automatiquement t\u00e9l\u00e9charg\u00e9 sur ton ordinateur sous la forme d'un fichier appel\u00e9 binary.zip . Si le t\u00e9l\u00e9chargement ne se lance pas, il est possible que ce dernier soit bloqu\u00e9 par ton navigateur Web. Une fois que binary.zip est t\u00e9l\u00e9charg\u00e9, connecte le Gramophone \u00e0 ton ordinateur puis lance l'application GramoLoader . Assure-toi que ton Gramophone est en \"mode programmation\" (l'interrupteur de mise en route du Gramophone doit-\u00eatre plac\u00e9 \u00e0 gauche). Ensuite, s\u00e9lectionne le fichier binary.zip sur l'ordinateur en cliquant sur le bouton \"S\u00e9lectionner un fichier\" : Le programme devrait alors \u00eatre envoy\u00e9 sur le Gramophone. Cette op\u00e9ration prend g\u00e9n\u00e9ralement une quinzaine de secondes. Si tout s'est bien pass\u00e9, le Gramophone devrait \u00eatre pr\u00eat \u00e0 ex\u00e9cuter le programme. Pour cela, il suffit de mettre le Gramophone en \"mode jeu\" en pla\u00e7ant l'interrupteur de d\u00e9marrage \u00e0 droite et en pressant ensuite bri\u00e8vement la mollette de s\u00e9lection des programmes Faust une fois. Un son correspondant \u00e0 l'onde en dent de scie impl\u00e9ment\u00e9e lors de l'\u00e9tape pr\u00e9c\u00e9dente devrait alors \u00eatre \u00e9mis. Le volume du son produit peut \u00eatre contr\u00f4l\u00e9 avec le potentiom\u00e8tre de contr\u00f4le du volume du Gramophone . Pour modifier le programme, il suffit de changer le code dans le Faust Web IDE et de rappuyer sur le bouton \"Gramo\" : rien d'autre \u00e0 faire, le programme GramoLoader se charge de tout ! Comme le programme Faust pr\u00e9sent\u00e9 au d\u00e9but de cette section ne contient aucun param\u00e8tre, il n'est actuellement pas possible d\u2019interagir avec ce dernier. Pour apprendre \u00e0 contr\u00f4ler un programme Faust avec le Gramophone, tu peux maintenant lire le scenario : Hello World : mon premier programme pour Gramophone .","title":"Avec le Faust Web IDE"},{"location":"gramophone/programming/#avec-le-faust-playground","text":"Avant de d\u00e9buter ce tutoriel, il est recommand\u00e9 de lire la page sur le Faust Playground . Construisons tout d'abord un programme tr\u00e8s simple dans le Faust Playground en connectant par exemple une harpe \"Kisana\" (instrument) \u00e0 un Echo (effet) : Du son devrait \u00eatre produit en d\u00e9pla\u00e7ant les potentiom\u00e8tres \"1 (Note 48)\", \"2 (Note 60)\" ou \"3 (Note 72)\" de Kisana. Pour installer ce programme sur le Gramophone, il faut dans un premier temps cliquer sur le bouton \"EXPORT\" dans le menu en haut de la fen\u00eatre : puis sur le bouton \"+ d'options\" : Dans les menus qui s'affichent, s\u00e9lectionne \"esp32\" dans le menu du haut et \"gramophoneFlash\" dans le deuxi\u00e8me, puis clique sur le bouton \"Export\" : Apr\u00e8s un quinzaine de secondes, un bouton \"Download\" devrait s'afficher dans le menu de gauche, clique dessus pour t\u00e9l\u00e9charger le fichier binary.zip contenant le programme du Gramophone sur ton ordinateur : Une fois que binary.zip est t\u00e9l\u00e9charg\u00e9, connecte le Gramophone \u00e0 ton ordinateur puis lance l'application GramoLoader . Assure-toi que ton Gramophone est en \"mode programmation\" (l'interrupteur de mise en route du Gramophone doit-\u00eatre plac\u00e9 \u00e0 gauche). Ensuite, s\u00e9lectionne le fichier binary.zip sur l'ordinateur en cliquant sur le bouton \"S\u00e9lectionner un fichier\" : Le programme devrait alors \u00eatre envoy\u00e9 sur le Gramophone. Cette op\u00e9ration prend g\u00e9n\u00e9ralement une quinzaine de secondes. Si tout s'est bien pass\u00e9, le Gramophone devrait \u00eatre pr\u00eat \u00e0 ex\u00e9cuter le programme. Pour cela, il suffit de mettre le Gramophone en \"mode jeu\" en pla\u00e7ant l'interrupteur de d\u00e9marrage \u00e0 droite et en pressant ensuite bri\u00e8vement la mollette de s\u00e9lection des programmes Faust une fois. Un son correspondant au programme cr\u00e9\u00e9 dans le Faust Playground lors de l'\u00e9tape pr\u00e9c\u00e9dente devrait alors \u00eatre \u00e9mis. Pour modifier le programme, il suffit de changer le patch dans le Faust Playground et de re-g\u00e9n\u00e9rer une fichier binary.zip : rien d'autre \u00e0 faire, le programme GramoLoader se charge de tout !","title":"Avec le Faust Playground"},{"location":"scenari/gesture/","text":"Capter le geste : travailler avec l'acc\u00e9l\u00e9rom\u00e8tre et le gyroscope TODO Un acc\u00e9l\u00e9rom\u00e8tre mesure l'acc\u00e9l\u00e9ration, c'est-\u00e0-dire le fait de changer la vitesse d'un objet dans l'espace. Si l'objet ne bouge pas ou qu'il se d\u00e9place \u00e0 une vitesse constante, aucune acc\u00e9l\u00e9ration n'est mesur\u00e9e. C'est un peu comme \u00eatre assis dans une voiture quand elle acc\u00e9l\u00e8re ou qu'elle freine : dans ces deux cas, notre corps mesure une \"acc\u00e9l\u00e9ration\". L'acc\u00e9l\u00e9rom\u00e8tre du Gramophone est tellement sensible qu'il peut aussi \u00eatre influenc\u00e9 par la gravit\u00e9 de la terre. Dans ce cas l\u00e0, il peut \u00eatre utilis\u00e9 pour mesurer l'inclinaison du Gramophone dans l'espace.","title":" Capter le geste : travailler avec l&#39;acc\u00e9l\u00e9rom\u00e8tre et le gyroscope "},{"location":"scenari/gesture/#capter-le-geste-travailler-avec-laccelerometre-et-le-gyroscope","text":"TODO Un acc\u00e9l\u00e9rom\u00e8tre mesure l'acc\u00e9l\u00e9ration, c'est-\u00e0-dire le fait de changer la vitesse d'un objet dans l'espace. Si l'objet ne bouge pas ou qu'il se d\u00e9place \u00e0 une vitesse constante, aucune acc\u00e9l\u00e9ration n'est mesur\u00e9e. C'est un peu comme \u00eatre assis dans une voiture quand elle acc\u00e9l\u00e8re ou qu'elle freine : dans ces deux cas, notre corps mesure une \"acc\u00e9l\u00e9ration\". L'acc\u00e9l\u00e9rom\u00e8tre du Gramophone est tellement sensible qu'il peut aussi \u00eatre influenc\u00e9 par la gravit\u00e9 de la terre. Dans ce cas l\u00e0, il peut \u00eatre utilis\u00e9 pour mesurer l'inclinaison du Gramophone dans l'espace.","title":"Capter le geste : travailler avec l'acc\u00e9l\u00e9rom\u00e8tre et le gyroscope"},{"location":"scenari/hello-world/","text":"Hello World : mon premier programme pour Gramophone Le but de ce sc\u00e9nario est d'\u00e9crire un programme Faust tr\u00e8s simple et de le faire fonctionner sur ton Gramophone ! Tu apprendras donc \u00e0 : produire du son avec Faust ; ma\u00eetriser la structure de base d'un programme Faust ; exporter un programme Faust vers le Gramophone depuis de la Faust Web IDE ; assigner des boutons et des potentiom\u00e8tres du Gramophone \u00e0 diff\u00e9rents param\u00e8tres du programme Faust. Produire du son avec Faust Faust permet d\u2019interagir directement avec le haut-parleur de notre ordinateur ou du Gramophone en d\u00e9crivant le son produit avec du code. Dans le cas de Faust, le code peut \u00eatre vue comme une succession de formules math\u00e9matiques connect\u00e9es entres-elles. Pour qu'un haut-parleur produise un son, il est n\u00e9cessaire de le faire vibrer c'est \u00e0 dire que la position de sa membrane doit \u00e9voluer dans le temps. La mani\u00e8re la plus \"standard\" d'effectuer cette op\u00e9ration est d'envoyer une onde sinuso\u00efde au haut-parleur. Le programme Faust suivant produit une onde sinuso\u00efdale : import(\"stdfaust.lib\"); process = os.osc(440); \u00c9diter/ex\u00e9cuter le programme >> Clique sur le bouton \"\u00c9diter/ex\u00e9cuter le programme\" ci-dessus et ce programme Faust devrait \u00eatre ouvert dans le Faust Web IDE .","title":" Hello World : mon premier programme pour Gramophone "},{"location":"scenari/hello-world/#hello-world-mon-premier-programme-pour-gramophone","text":"Le but de ce sc\u00e9nario est d'\u00e9crire un programme Faust tr\u00e8s simple et de le faire fonctionner sur ton Gramophone ! Tu apprendras donc \u00e0 : produire du son avec Faust ; ma\u00eetriser la structure de base d'un programme Faust ; exporter un programme Faust vers le Gramophone depuis de la Faust Web IDE ; assigner des boutons et des potentiom\u00e8tres du Gramophone \u00e0 diff\u00e9rents param\u00e8tres du programme Faust.","title":"Hello World : mon premier programme pour Gramophone"},{"location":"scenari/hello-world/#produire-du-son-avec-faust","text":"Faust permet d\u2019interagir directement avec le haut-parleur de notre ordinateur ou du Gramophone en d\u00e9crivant le son produit avec du code. Dans le cas de Faust, le code peut \u00eatre vue comme une succession de formules math\u00e9matiques connect\u00e9es entres-elles. Pour qu'un haut-parleur produise un son, il est n\u00e9cessaire de le faire vibrer c'est \u00e0 dire que la position de sa membrane doit \u00e9voluer dans le temps. La mani\u00e8re la plus \"standard\" d'effectuer cette op\u00e9ration est d'envoyer une onde sinuso\u00efde au haut-parleur. Le programme Faust suivant produit une onde sinuso\u00efdale : import(\"stdfaust.lib\"); process = os.osc(440); \u00c9diter/ex\u00e9cuter le programme >> Clique sur le bouton \"\u00c9diter/ex\u00e9cuter le programme\" ci-dessus et ce programme Faust devrait \u00eatre ouvert dans le Faust Web IDE .","title":"Produire du son avec Faust"},{"location":"scenari/introduction/","text":"Introduction Vue d\u2019ensemble Le projet Amstramgrame a pour but de favoriser l\u2019apprentissage de concepts scientifiques li\u00e9s aux math\u00e9matiques, \u00e0 la physique et \u00e0 l\u2019informatique par des applications concr\u00e8tes dans des domaines artistiques comme la musique (ex. lutherie, composition et musique d\u2019ensemble), la danse (geste chor\u00e9graphi\u00e9), etc. Pour ce faire, Amstramgrame s\u2019appuie sur 3 outils : des sc\u00e9narii p\u00e9dagogiques courts ex\u00e9cutables en moins de 2h donnant des pistes de travail aux enseignants issus de plusieurs disciplines (ex. musique, math\u00e9matiques, physique, etc.) pr\u00e9sents sur le site web ; le langage de programmation Faust ( https://faust.grame.fr ) int\u00e9gr\u00e9 directement dans le site web ; le \" Gramophone \" - instrument de musique enti\u00e8rement programmable en Faust et qui permet de rendre tangible les concepts abstraits \u00e9tudi\u00e9s dans les diff\u00e9rents sc\u00e9narii pr\u00e9sent\u00e9s sur le site web. Des valises de 30 Gramophones sont mise \u00e0 disposition dans les \u00e9tablissements scolaires. Le projet n\u00e9cessite \u00e9galement l\u2019utilisation d\u2019ordinateurs sur place pour acc\u00e9der au site web d\u2019Amstramgrame et pour programmer les Gramophones. Les th\u00e8mes des sc\u00e9narios sont modulaires afin qu\u2019ils puissent \u00eatre abord\u00e9s dans le contexte de diff\u00e9rents cours (ex. maths, physique, techno, musique, etc.). Des id\u00e9es de projets pluridisciplinaires alliant les comp\u00e9tences acquises dans les diff\u00e9rents sc\u00e9narios p\u00e9dagogiques sont \u00e9galement propos\u00e9es sur le site web d\u2019Amstramgrame. L\u2019ensemble des programmes \u00e9tudi\u00e9s dans les sc\u00e9narii d\u2019AmstramGrame peuvent \u00e9galement \u00eatre transform\u00e9s en applications pour smartphone Android afin que les \u00e9tablissements n\u2019ayant pas acc\u00e8s au Gramophones puissent b\u00e9n\u00e9ficier d\u2019une alternative. C'est quoi le code ? La notion de programme informatique est au c\u0153ur de la r\u00e9volution num\u00e9rique. Nous interagissons au quotidien avec des programmes informatiques, que ce soit sous la forme d\u2019applications pour smartphones, d\u2019assistance dans les voitures, d\u2019objets connect\u00e9s ou encore de pages web. Or derri\u00e8re chaque programme informatique se cache un ensemble d\u2019instructions qui le constituent : le code. Il existe une grande vari\u00e9t\u00e9 de mani\u00e8res de programmer. Depuis FORTRAN, le premier langage de programmation de haut niveau cr\u00e9\u00e9 en 1954, leur nombre n\u2019a cess\u00e9 d\u2019augmenter, chacun d\u00e9veloppant sa syntaxe propre. Tandis que certains privil\u00e9gient une approche g\u00e9n\u00e9raliste, d\u2019autres sont con\u00e7us \u00e0 des fins sp\u00e9cifiques, comme par exemple les langages utilis\u00e9s en bourse et dans le domaine de la finance. Beaucoup de langages de programmation sont dit open-source, c\u2019est-\u00e0-dire dont le code est ouvert et libre d\u2019acc\u00e8s. Parmi les langages de programmation les plus populaires en 2020, on trouve : Java Javascript Python C C++ On discerne deux grandes familles de langages de programmation, aussi appel\u00e9es \"paradigmes\" : les langages fonctionnels et les langages imp\u00e9ratifs . La programmation fonctionnelle d\u2019abord, par laquelle on compose un probl\u00e8me sous la forme d\u2019un ensemble de fonctions math\u00e9matiques \u00e0 ex\u00e9cuter, traduites dans un second temps dans le langage de la machine (on parle alors de compilation). Elle facilite la compr\u00e9hension par du code court et expressif, et produit peu de bugs. L\u2019autre famille de programmation est dite imp\u00e9rative (ou proc\u00e9durale), et permet d\u2019\u00e9crire du code qui d\u00e9crit exactement et en d\u00e9tail les \u00e9tapes que l\u2019ordinateur doit effectuer pour atteindre l\u2019objectif, sans \u00e9tape de traduction dans le langage de la machine. Bien que la plupart des langages aient \u00e9t\u00e9 con\u00e7us pour prendre en charge un paradigme de programmation sp\u00e9cifique, de nombreux langages g\u00e9n\u00e9raux sont suffisamment flexibles pour passer de l\u2019un \u00e0 l\u2019autre. \u00c0 l\u2019instar de nombreux pays comme les \u00c9tats-Unis, l\u2019Angleterre ou encore l\u2019Allemagne, la France a choisi d\u2019inscrire le codage informatique dans les programmes scolaires d\u00e8s le coll\u00e8ge. Depuis la rentr\u00e9e 2016, les professeurs des \u00e9coles et enseignants doivent initier les \u00e9l\u00e8ves \u00e0 la programmation informatique, dans le but de d\u00e9velopper leur sens logique et leur capacit\u00e9 \u00e0 d\u00e9couper un probl\u00e8me en sous-probl\u00e8mes. Au lyc\u00e9e, en Enseignement du Num\u00e9rique et Sciences Informatiques de premi\u00e8re g\u00e9n\u00e9rale, le langage Python est utilis\u00e9. Ce langage est simple d\u2019usage, concis, libre et gratuit, largement r\u00e9pandu, riche de biblioth\u00e8ques adapt\u00e9es et b\u00e9n\u00e9ficie d\u2019une vaste communaut\u00e9 de d\u00e9veloppeurs. Pourtant, le projet Amstramgrame s\u2019appuie sur l\u2019utilisation de Faust. Pourquoi ? Pourquoi Faust ? Faust (Functional Audio Stream) est un langage de programmation fonctionnel d\u00e9velopp\u00e9 principalement \u00e0 Grame, et destin\u00e9 sp\u00e9cifiquement \u00e0 la cr\u00e9ation sonore. Il est n\u00e9 en r\u00e9ponse \u00e0 un besoin qui \u00e9merge d\u00e8s les ann\u00e9es 1950 : disposer d\u2019un \"vocabulaire\" adapt\u00e9 pour d\u00e9crire des proc\u00e9d\u00e9s musicaux de synth\u00e8se et de traitement du son dans toute leur complexit\u00e9. Faust propose pour ce fait une s\u00e9mantique simple et rigoureuse, et des techniques de compilation sophistiqu\u00e9es rendant accessible \u00e0 des artistes, des r\u00e9alisateurs en informatique musicale, etc., sans connaissance en programmation, des d\u00e9veloppements qui n\u00e9cessitaient traditionnellement l\u2019emploi de langages complexes comme C ou C++. Faust se diff\u00e9rencie en effet des autres langages musicaux par le fait qu\u2019il est compil\u00e9 (c\u2019est-\u00e0-dire traduit directement dans le langage de la machine) plut\u00f4t qu\u2019interpr\u00e9t\u00e9. Cela lui permet d\u2019exprimer des calculs fonctionnant \u00e0 l\u2019\u00e9chantillon pr\u00e8s pouvant fonctionner sur toutes sortes de plateformes. Ainsi, Faust offre une alternative plus simple et plus efficace \u00e0 Python pour, par exemple, programmer des plug-ins audios, des applications musicales, etc. Le projet Amstramgrame privil\u00e9gie donc Faust pour son efficacit\u00e9 dans la cr\u00e9ation sonore. Mais un apprenti codeur aura tout int\u00e9r\u00eat \u00e0 varier les langages de programmation qu\u2019il utilise selon ses projets, \u00e0 la mani\u00e8re des langues vivantes o\u00f9 il serait inconcevable, au si\u00e8cle o\u00f9 nous vivons, de vouloir s\u2019obstiner \u00e0 ne parler qu\u2019une seule langue. En outre, l\u2019apprentissage du code est une mani\u00e8re de passer du statut de simple utilisateur, limit\u00e9 par ce que le march\u00e9 lui propose, au statut de citoyen \u00e9clair\u00e9 et autonome dans ses usages, capable de r\u00e9pondre lui-m\u00eame \u00e0 ses besoins li\u00e9s \u00e0 l\u2019informatique. D\u00e9couvrez le Gramophone Le Gramophone a \u00e9t\u00e9 sp\u00e9cialement con\u00e7u dans le cadre du projet Amstramgrame. C\u2019est un instrument enti\u00e8rement programmable en Faust et compl\u00e8tement ind\u00e9pendant (il peut fonctionner sous batterie) La Gramophone abrite diff\u00e9rents types de capteurs tel que des acc\u00e9l\u00e9rom\u00e8tres, un gyroscope, un potentiom\u00e8tre, une boussole num\u00e9rique, un capteur de lumi\u00e8re, des capteurs de force, etc. Il est bas\u00e9 sur un microcontrolleur (ESP-32) et il b\u00e9n\u00e9ficie directement des derniers d\u00e9veloppements sur les syst\u00e8mes embarqu\u00e9s men\u00e9s par l\u2019\u00e9quipe de recherche de Grame . Pour \u00eatre programm\u00e9, le Gramophone doit \u00eatre connect\u00e9 \u00e0 un ordinateur via un c\u00e2ble USB qui sert \u00e9galement au chargement de sa batterie (de la m\u00eame mani\u00e8re qu\u2019un t\u00e9l\u00e9phone portable). Il est n\u00e9cessaire d\u2019 installer une application (compatible pour Windows, MacOS et Linux) sur les machines utilis\u00e9es pour programmer les Gramophones (ce qui devra donc \u00eatre pr\u00e9vu par les \u00e9tablissement d\u2019accueil). Plus d'informations sur les gramophones peuvent \u00eatre trouv\u00e9es sur la page correspondante sur ce site .","title":" Introduction "},{"location":"scenari/introduction/#introduction","text":"","title":"Introduction"},{"location":"scenari/introduction/#vue-densemble","text":"Le projet Amstramgrame a pour but de favoriser l\u2019apprentissage de concepts scientifiques li\u00e9s aux math\u00e9matiques, \u00e0 la physique et \u00e0 l\u2019informatique par des applications concr\u00e8tes dans des domaines artistiques comme la musique (ex. lutherie, composition et musique d\u2019ensemble), la danse (geste chor\u00e9graphi\u00e9), etc. Pour ce faire, Amstramgrame s\u2019appuie sur 3 outils : des sc\u00e9narii p\u00e9dagogiques courts ex\u00e9cutables en moins de 2h donnant des pistes de travail aux enseignants issus de plusieurs disciplines (ex. musique, math\u00e9matiques, physique, etc.) pr\u00e9sents sur le site web ; le langage de programmation Faust ( https://faust.grame.fr ) int\u00e9gr\u00e9 directement dans le site web ; le \" Gramophone \" - instrument de musique enti\u00e8rement programmable en Faust et qui permet de rendre tangible les concepts abstraits \u00e9tudi\u00e9s dans les diff\u00e9rents sc\u00e9narii pr\u00e9sent\u00e9s sur le site web. Des valises de 30 Gramophones sont mise \u00e0 disposition dans les \u00e9tablissements scolaires. Le projet n\u00e9cessite \u00e9galement l\u2019utilisation d\u2019ordinateurs sur place pour acc\u00e9der au site web d\u2019Amstramgrame et pour programmer les Gramophones. Les th\u00e8mes des sc\u00e9narios sont modulaires afin qu\u2019ils puissent \u00eatre abord\u00e9s dans le contexte de diff\u00e9rents cours (ex. maths, physique, techno, musique, etc.). Des id\u00e9es de projets pluridisciplinaires alliant les comp\u00e9tences acquises dans les diff\u00e9rents sc\u00e9narios p\u00e9dagogiques sont \u00e9galement propos\u00e9es sur le site web d\u2019Amstramgrame. L\u2019ensemble des programmes \u00e9tudi\u00e9s dans les sc\u00e9narii d\u2019AmstramGrame peuvent \u00e9galement \u00eatre transform\u00e9s en applications pour smartphone Android afin que les \u00e9tablissements n\u2019ayant pas acc\u00e8s au Gramophones puissent b\u00e9n\u00e9ficier d\u2019une alternative.","title":"Vue d\u2019ensemble"},{"location":"scenari/introduction/#cest-quoi-le-code","text":"La notion de programme informatique est au c\u0153ur de la r\u00e9volution num\u00e9rique. Nous interagissons au quotidien avec des programmes informatiques, que ce soit sous la forme d\u2019applications pour smartphones, d\u2019assistance dans les voitures, d\u2019objets connect\u00e9s ou encore de pages web. Or derri\u00e8re chaque programme informatique se cache un ensemble d\u2019instructions qui le constituent : le code. Il existe une grande vari\u00e9t\u00e9 de mani\u00e8res de programmer. Depuis FORTRAN, le premier langage de programmation de haut niveau cr\u00e9\u00e9 en 1954, leur nombre n\u2019a cess\u00e9 d\u2019augmenter, chacun d\u00e9veloppant sa syntaxe propre. Tandis que certains privil\u00e9gient une approche g\u00e9n\u00e9raliste, d\u2019autres sont con\u00e7us \u00e0 des fins sp\u00e9cifiques, comme par exemple les langages utilis\u00e9s en bourse et dans le domaine de la finance. Beaucoup de langages de programmation sont dit open-source, c\u2019est-\u00e0-dire dont le code est ouvert et libre d\u2019acc\u00e8s. Parmi les langages de programmation les plus populaires en 2020, on trouve : Java Javascript Python C C++ On discerne deux grandes familles de langages de programmation, aussi appel\u00e9es \"paradigmes\" : les langages fonctionnels et les langages imp\u00e9ratifs . La programmation fonctionnelle d\u2019abord, par laquelle on compose un probl\u00e8me sous la forme d\u2019un ensemble de fonctions math\u00e9matiques \u00e0 ex\u00e9cuter, traduites dans un second temps dans le langage de la machine (on parle alors de compilation). Elle facilite la compr\u00e9hension par du code court et expressif, et produit peu de bugs. L\u2019autre famille de programmation est dite imp\u00e9rative (ou proc\u00e9durale), et permet d\u2019\u00e9crire du code qui d\u00e9crit exactement et en d\u00e9tail les \u00e9tapes que l\u2019ordinateur doit effectuer pour atteindre l\u2019objectif, sans \u00e9tape de traduction dans le langage de la machine. Bien que la plupart des langages aient \u00e9t\u00e9 con\u00e7us pour prendre en charge un paradigme de programmation sp\u00e9cifique, de nombreux langages g\u00e9n\u00e9raux sont suffisamment flexibles pour passer de l\u2019un \u00e0 l\u2019autre. \u00c0 l\u2019instar de nombreux pays comme les \u00c9tats-Unis, l\u2019Angleterre ou encore l\u2019Allemagne, la France a choisi d\u2019inscrire le codage informatique dans les programmes scolaires d\u00e8s le coll\u00e8ge. Depuis la rentr\u00e9e 2016, les professeurs des \u00e9coles et enseignants doivent initier les \u00e9l\u00e8ves \u00e0 la programmation informatique, dans le but de d\u00e9velopper leur sens logique et leur capacit\u00e9 \u00e0 d\u00e9couper un probl\u00e8me en sous-probl\u00e8mes. Au lyc\u00e9e, en Enseignement du Num\u00e9rique et Sciences Informatiques de premi\u00e8re g\u00e9n\u00e9rale, le langage Python est utilis\u00e9. Ce langage est simple d\u2019usage, concis, libre et gratuit, largement r\u00e9pandu, riche de biblioth\u00e8ques adapt\u00e9es et b\u00e9n\u00e9ficie d\u2019une vaste communaut\u00e9 de d\u00e9veloppeurs. Pourtant, le projet Amstramgrame s\u2019appuie sur l\u2019utilisation de Faust. Pourquoi ?","title":"C'est quoi le code ?"},{"location":"scenari/introduction/#pourquoi-faust","text":"Faust (Functional Audio Stream) est un langage de programmation fonctionnel d\u00e9velopp\u00e9 principalement \u00e0 Grame, et destin\u00e9 sp\u00e9cifiquement \u00e0 la cr\u00e9ation sonore. Il est n\u00e9 en r\u00e9ponse \u00e0 un besoin qui \u00e9merge d\u00e8s les ann\u00e9es 1950 : disposer d\u2019un \"vocabulaire\" adapt\u00e9 pour d\u00e9crire des proc\u00e9d\u00e9s musicaux de synth\u00e8se et de traitement du son dans toute leur complexit\u00e9. Faust propose pour ce fait une s\u00e9mantique simple et rigoureuse, et des techniques de compilation sophistiqu\u00e9es rendant accessible \u00e0 des artistes, des r\u00e9alisateurs en informatique musicale, etc., sans connaissance en programmation, des d\u00e9veloppements qui n\u00e9cessitaient traditionnellement l\u2019emploi de langages complexes comme C ou C++. Faust se diff\u00e9rencie en effet des autres langages musicaux par le fait qu\u2019il est compil\u00e9 (c\u2019est-\u00e0-dire traduit directement dans le langage de la machine) plut\u00f4t qu\u2019interpr\u00e9t\u00e9. Cela lui permet d\u2019exprimer des calculs fonctionnant \u00e0 l\u2019\u00e9chantillon pr\u00e8s pouvant fonctionner sur toutes sortes de plateformes. Ainsi, Faust offre une alternative plus simple et plus efficace \u00e0 Python pour, par exemple, programmer des plug-ins audios, des applications musicales, etc. Le projet Amstramgrame privil\u00e9gie donc Faust pour son efficacit\u00e9 dans la cr\u00e9ation sonore. Mais un apprenti codeur aura tout int\u00e9r\u00eat \u00e0 varier les langages de programmation qu\u2019il utilise selon ses projets, \u00e0 la mani\u00e8re des langues vivantes o\u00f9 il serait inconcevable, au si\u00e8cle o\u00f9 nous vivons, de vouloir s\u2019obstiner \u00e0 ne parler qu\u2019une seule langue. En outre, l\u2019apprentissage du code est une mani\u00e8re de passer du statut de simple utilisateur, limit\u00e9 par ce que le march\u00e9 lui propose, au statut de citoyen \u00e9clair\u00e9 et autonome dans ses usages, capable de r\u00e9pondre lui-m\u00eame \u00e0 ses besoins li\u00e9s \u00e0 l\u2019informatique.","title":"Pourquoi Faust ?"},{"location":"scenari/introduction/#decouvrez-le-gramophone","text":"Le Gramophone a \u00e9t\u00e9 sp\u00e9cialement con\u00e7u dans le cadre du projet Amstramgrame. C\u2019est un instrument enti\u00e8rement programmable en Faust et compl\u00e8tement ind\u00e9pendant (il peut fonctionner sous batterie) La Gramophone abrite diff\u00e9rents types de capteurs tel que des acc\u00e9l\u00e9rom\u00e8tres, un gyroscope, un potentiom\u00e8tre, une boussole num\u00e9rique, un capteur de lumi\u00e8re, des capteurs de force, etc. Il est bas\u00e9 sur un microcontrolleur (ESP-32) et il b\u00e9n\u00e9ficie directement des derniers d\u00e9veloppements sur les syst\u00e8mes embarqu\u00e9s men\u00e9s par l\u2019\u00e9quipe de recherche de Grame . Pour \u00eatre programm\u00e9, le Gramophone doit \u00eatre connect\u00e9 \u00e0 un ordinateur via un c\u00e2ble USB qui sert \u00e9galement au chargement de sa batterie (de la m\u00eame mani\u00e8re qu\u2019un t\u00e9l\u00e9phone portable). Il est n\u00e9cessaire d\u2019 installer une application (compatible pour Windows, MacOS et Linux) sur les machines utilis\u00e9es pour programmer les Gramophones (ce qui devra donc \u00eatre pr\u00e9vu par les \u00e9tablissement d\u2019accueil). Plus d'informations sur les gramophones peuvent \u00eatre trouv\u00e9es sur la page correspondante sur ce site .","title":"D\u00e9couvrez le Gramophone"},{"location":"scenari/niveau1/","text":"Niveau 1 Tester son Gramophone import(\"stdfaust.lib\"); shake_x = hslider(\"X [acc: 0 0 -13 0 13][hidden:1]\", 0, -100, 100, 0.001); shake_y = hslider(\"Y [acc: 1 0 -14 0 14][hidden:1]\", 0, -100, 100, 0.001); well = +((abs(shake_x + shake_x')) > 100) ~ *(0.99) : min(1) : max(0); russianBell_ui = pm.russianBell(strikePosition,strikeCutoff,strikeSharpness,gain,gate) with { strikePosition = nentry(\"v:russianBell/[0]strikePosition\", 0,0,4,1); strikeCutoff = hslider(\"v:russianBell/[1]strikeCutOff\", 6500,20,20000,1); strikeSharpness = hslider(\"v:russianBell/[2]strikeSharpness\", 0.5,0.01,5,0.01); gain = hslider(\"v:russianBell/[3]gain [knob:1]\",1,0,1,0.01); gate = well; }; process = russianBell_ui <: _,_; \u00c9diter/ex\u00e9cuter le programme >> Prise en main du Gramophone/Smartphone Dur\u00e9e : 2h Niveau : D\u00e9butant Notions : Prise en main du Gramophone, contr\u00f4leur discrets vs. continus, captation de gestes, introduction \u00e0 la musique \u00e9lectronique exp\u00e9rimentale Disciplines li\u00e9es : Toutes - Introduction g\u00e9n\u00e9raliste Pr\u00e9requis : Aucun Le but principal de cette le\u00e7on est de prendre en main le gramophone/smartphone par l\u2019ex\u00e9cution d\u2019une courte pi\u00e8ce musicale utilisant un programme pr\u00e9-install\u00e9 sur le Gramophone (pas de programmation requise). Cette le\u00e7on doit \u00eatre avant tout ludique pour motiver les \u00e9l\u00e8ves \u00e0 faire les autres sc\u00e9narii d\u2019AmstramGrame par la suite. La le\u00e7on commence par l\u2019apprentissage d\u2019une pi\u00e8ce utilisant les diff\u00e9rents capteurs du Gramophone (capteur de lumi\u00e8re, capteur de pression, bouton, potentiom\u00e8tre, acc\u00e9l\u00e9rom\u00e8tre, gyroscope, etc.). Une fois cette pi\u00e8ce apprise et ma\u00eetris\u00e9e, les \u00e9l\u00e8ves \u00e9tudient lors d\u2019une seconde \u00e9tape le fonctionnement de chaque capteur. Par exemple, les diff\u00e9rences entre l\u2019acc\u00e9l\u00e9rom\u00e8tre et le gyroscope sont \u00e9tudi\u00e9es (ex. position relative vs. position absolue), les \u00e9l\u00e8ves observent les effets de la captation de position par rapport \u00e0 la d\u00e9tection d\u2019acc\u00e9l\u00e9rations, etc. On explique que les gramophones peuvent \u00eatre programm\u00e9s et que les diff\u00e9rents capteurs peuvent \u00eatre assign\u00e9s \u00e0 n\u2019importe quel param\u00e8tre d\u2019un g\u00e9n\u00e9rateur de son. Par exemple, un des capteurs de pression pourrait contr\u00f4ler la hauteur du son g\u00e9n\u00e9r\u00e9 dans le cas de la pi\u00e8ce \u00e9tudi\u00e9e lors de la premi\u00e8re \u00e9tape de cette le\u00e7on mais pourrait \u00eatre utilis\u00e9 pour contr\u00f4ler le volume d\u2019un son dans le cas d\u2019un autre programme. Cette le\u00e7on se termine en faisant une ouverture/pr\u00e9sentation de la suite des activit\u00e9s d\u2019AmstramGrame : musique \u00e9lectronique, programmation, physique, math\u00e9matique, etc. Les diff\u00e9rents types de sons et leurs param\u00e8tres Dur\u00e9e : 2h Niveau : D\u00e9butant Notions : Diff\u00e9rents types de sons, \u00e9chelle lin\u00e9aire vs. \u00e9chelle logarithmique, fr\u00e9quence/hauteur, gain/v\u00e9locit\u00e9 Disciplines li\u00e9es : Approche scientifique // physique, math\u00e9matique Pr\u00e9requis : Prise en main du gramophone/smartphone L\u2019objectif de cette le\u00e7on est de pr\u00e9senter les diff\u00e9rentes types de sons (ex. bruits, sons pures, harmoniques/inharmoniques) et leurs param\u00e8tres associ\u00e9s (ex. gain et fr\u00e9quence). Un programme pr\u00e9-install\u00e9 sur le gramophone permet d\u2019entendre ces diff\u00e9rents types de sons et de contr\u00f4ler leurs param\u00e8tres avec les diff\u00e9rents capteurs. Le code source de ce programme devrait pouvoir \u00eatre visualis\u00e9 par les \u00e9l\u00e8ves qui le souhaiteraient. Le concept de gain est introduit. On explique que le gain n\u2019est pas une valeur lin\u00e9aire et qu\u2019il faut plus que deux gramophones pour doubler le volume du son per\u00e7u, etc. Dans ce contexte l\u00e0, un mode du programme pr\u00e9-install\u00e9 sur le gramophone pourrait fonctionner en lin\u00e9aire et un autre en logarithmique pour entendre la diff\u00e9rence d\u2019un point de vue perceptuel. Le concept de fr\u00e9quence est introduit. On \u00e9tudie son lien avec la \"hauteur\" d\u2019un son et pourquoi pas avec les notes de musique. De la m\u00eame mani\u00e8re que pour le gain, on explique que ce param\u00e8tre n\u2019est pas lin\u00e9aire et qu\u2019il faut doubler la fr\u00e9quence d\u2019un son pour passer \u00e0 l\u2019octave sup\u00e9rieure. Le bruit n\u2019a qu\u2019un seul param\u00e8tre : son gain. Un son pur est produit par une onde sinuso\u00efdale. Il a deux param\u00e8tres : la fr\u00e9quence (hauteur) et le gain. Un son complex est compos\u00e9 de plusieurs sons pures (lien avec la le\u00e7on sur la synth\u00e8se additive). Dans le cas d\u2019un son harmonique, la fr\u00e9quence de chaque son pur est un multiple du son pur ayant la fr\u00e9quence la plus basse (fondamentale). Dans le cas d\u2019un son inharmonique, la fr\u00e9quence de chaque son pure ne d\u00e9pend pas de la fondamentale. Anatomie d\u2019un programme Faust Dur\u00e9e : 1h Niveau : D\u00e9butant Notions : Biblioth\u00e8que (programmation), variable, contr\u00f4le du gain par une multiplication, interface graphique Disciplines li\u00e9es : Approche scientifique // programmation Pr\u00e9requis : Aucun L\u2019objectif de cette le\u00e7on est d\u2019\u00e9tudier et de comprendre la structure de base d\u2019un programme Faust. Cette le\u00e7on utilise l\u2019\u00e9diteur en ligne de Faust (int\u00e9grer dans le site web d\u2019Amstramgrame) mais pas le gramophone Le programme \u00e9tudi\u00e9 pourrait prendre la forme suivante : import(\"stdfaust.lib\"); freq = hslider(\"freq\",440,50,3000,0.01); gain = hslider(\"gain\",1,0,1,0.01); gate = button(\"gate\"); process = os.sawtooth(freq)*gain*gate; \u00c9diter/ex\u00e9cuter le programme >> L\u2019ensemble des \u00e9l\u00e9ments de ce programme sont \u00e9tudi\u00e9s (ex. concepts de biblioth\u00e8que, de variable, d\u2019\u00e9l\u00e9ment d\u2019interface utilisateur, etc.). On explique que le gain d\u2019un signal peut \u00eatre contr\u00f4l\u00e9 en le multipliant par un nombre entre 0 et 1 (ce qui revient \u00e0 le diviser). Concept d'interrupteur : le son peut \u00eatre jou\u00e9 ou non en appuyant sur un bouton. En \u00e9tant en mesure de contr\u00f4ler la hauteur d\u2019un son, son gain et le fait qu\u2019il soit actif ou non permet de mettre en place un synth\u00e9tiseur complet. Cette le\u00e7on peut prendre la forme d\u2019un tutoriel pas \u00e0 pas. Une ouverture est faite \u00e0 la fin de la le\u00e7on pour expliquer que ce programme qui fonctionne dans le cas pr\u00e9sent dans le navigateur web peut \u00eatre export\u00e9 vers le gramophone et que les curseurs et boutons pr\u00e9sents dans l\u2019interface graphique pourraient-\u00eatre remplac\u00e9s/assign\u00e9s \u00e0 des capteurs du gramophone. Programmer le Gramophone Dur\u00e9e : 2h Niveau : D\u00e9butant Notions : Programmation du Gramophone Disciplines li\u00e9es : approche scientifique // programmation Pr\u00e9requis : Anatomie d\u2019un programme Faust L\u2019objectif de cette le\u00e7on est d\u2019apprendre \u00e0 programmer le gramophone et d\u2019associer certains de ses capteurs (capteurs \u201csimples\u201d comme le capteur de pression et de lumi\u00e8re, pas les acc\u00e9l\u00e9rom\u00e8tres) \u00e0 des param\u00e8tres du programme Faust. Le programme \u00e9tudi\u00e9 pourrait prendre la forme suivante (version adapt\u00e9e du programme pr\u00e9sent\u00e9 dans la le\u00e7on \u201cAnatomie d\u2019un programme Faust\u201d) : import(\"stdfaust.lib\"); freq = hslider(\"freq[gp:p0]\",440,50,3000,0.01); gain = hslider(\"gain[gp:p1]\",1,0,1,0.01); process = os.sawtooth(freq)*gain; L\u2019application d\u2019interface entre la machine utilis\u00e9e pour la programmation en Faust et le gramophone est \u00e9tudi\u00e9e. Les metadatas de capteurs (ex. [gp:p0] ) sont pr\u00e9sent\u00e9es et leur fonctionnement est d\u00e9crit. Des exercices autour du changement des mappings des param\u00e8tres (par exemple augmenter ou diminuer la gamme de la fr\u00e9quence) sont effectu\u00e9s. Diff\u00e9rents oscillateurs sont utilis\u00e9s pour produire diff\u00e9rents types de sons (ex. dent de scie, triangle, sinus, etc.) : lien avec la le\u00e7on \u201cIntroduction au design sonore\u201d. L'orchestre de bruit Dur\u00e9e : 12 s\u00e9ances Niveau : D\u00e9butant Notions : Orchestre de Gramophone, musique d\u2019ensemble, geste Disciplines li\u00e9es : Technologie - Art Plastique - Musique Pr\u00e9requis : Le lieu doit \u00eatre un laboratoire, une salle informatique oubien une salle d'orchestre Re\u0301sume\u0301 : En 1913, Luigi Russolo re\u0301dige l\u2019Art des bruits qui the\u0301orise l\u2019utilisation des bruits pour un usage musical. Il re\u0301alise notamment des partitions pour orchestre de bruit qui seront interpre\u0301te\u0301es par son intonarumori, un ensemble de machines me\u0301caniques aux sons e\u0301tranges. Dans cette se\u0301quence, nous proposons aux e\u0301le\u0300ves de construire leur propre orchestre de bruit en passant par la de\u0301couverte du mouvement futuriste, la programmation de l\u2019instrument a\u0300 l\u2019aide du Gramophone sur le site AmStramGrame et l\u2019e\u0301laboration d\u2019une partition graphique en groupe. De\u0301couverte du courant futuriste et de Luigi Russolo. \u00ab L\u2019arts des bruits \u00bb manifeste apparu en 1913 par Luigi Russolo. Dans ce manifeste Russolo y s soutient l\u2019ide\u0301e que l\u2019oreille humaine s\u2019est habitue\u0301 au bruit. Un bruit devient musique de\u0300s lors qu\u2019il est organise\u0301. Ressources : Vide\u0301o Intonarumori / Image partitions / photo historique / Peinture / Poe\u0300me futuristes / Extensions > Musiques concre\u0300tes, Musiques industrielles, Alva Noto, Aphex Twin, Merzbow... Initiation au Gramophone De\u0301couverte de l\u2019instruments (diffe\u0301rents capteurs, lien avec le geste) a\u0300 l\u2019aide de scripts pre\u0301-e\u0301crits. De\u0301couverte de la programmation (De\u0301couverte de l\u2019interface Web via le site AmStramGrame), de\u0301couverte des ressources Faust (librairies propose\u0301es, docs...) Construction de l\u2019instrument (4 se\u0301ances) : Cre\u0301ation d\u2019une machine a\u0300 bruit par se\u0301ance (ex : percussion, pe\u0301riodique, bruit blanc, boucle) A partir des diffe\u0301rents blocs de scripts Faust disponibles sur le site AmStramGram, les e\u0301le\u0300ves assembleront les diffe\u0301rentes parties de scripts (copier/coller) et les organiseront selon leur choix. Chaque e\u0301le\u0300ve pre\u0301sente le script de son Gramophone au groupe Jeu collectif en groupe des machines Codage partition (4 se\u0301ances) : Cre\u0301ation d\u2019une partition du Gramophone en s\u2019inspirant des partitions des codes d\u2019Hugo Piatti, etc... Cre\u0301ation d\u2019un vocabulaire commun (musical, gestuel associe\u0301 au gramophone,etc...) Construction du support (papiers, formats, couleurs, etc...) Re\u0301pe\u0301tition Orchestre x2 : Les dernie\u0300res se\u0301ances seront consacre\u0301es a\u0300 l\u2019e\u0301laboration de pupitres (rassemblement des instruments par famille de bruits). Re\u0301pe\u0301tition de l\u2019oeuvre (diffe\u0301rents mouvement, travail avec un chef d\u2019orchestre, nuances, postures,etc...) Restitution publique","title":" Niveau 1 "},{"location":"scenari/niveau1/#niveau-1","text":"","title":"Niveau 1"},{"location":"scenari/niveau1/#tester-son-gramophone","text":"import(\"stdfaust.lib\"); shake_x = hslider(\"X [acc: 0 0 -13 0 13][hidden:1]\", 0, -100, 100, 0.001); shake_y = hslider(\"Y [acc: 1 0 -14 0 14][hidden:1]\", 0, -100, 100, 0.001); well = +((abs(shake_x + shake_x')) > 100) ~ *(0.99) : min(1) : max(0); russianBell_ui = pm.russianBell(strikePosition,strikeCutoff,strikeSharpness,gain,gate) with { strikePosition = nentry(\"v:russianBell/[0]strikePosition\", 0,0,4,1); strikeCutoff = hslider(\"v:russianBell/[1]strikeCutOff\", 6500,20,20000,1); strikeSharpness = hslider(\"v:russianBell/[2]strikeSharpness\", 0.5,0.01,5,0.01); gain = hslider(\"v:russianBell/[3]gain [knob:1]\",1,0,1,0.01); gate = well; }; process = russianBell_ui <: _,_; \u00c9diter/ex\u00e9cuter le programme >>","title":"Tester son Gramophone"},{"location":"scenari/niveau1/#prise-en-main-du-gramophonesmartphone","text":"Dur\u00e9e : 2h Niveau : D\u00e9butant Notions : Prise en main du Gramophone, contr\u00f4leur discrets vs. continus, captation de gestes, introduction \u00e0 la musique \u00e9lectronique exp\u00e9rimentale Disciplines li\u00e9es : Toutes - Introduction g\u00e9n\u00e9raliste Pr\u00e9requis : Aucun Le but principal de cette le\u00e7on est de prendre en main le gramophone/smartphone par l\u2019ex\u00e9cution d\u2019une courte pi\u00e8ce musicale utilisant un programme pr\u00e9-install\u00e9 sur le Gramophone (pas de programmation requise). Cette le\u00e7on doit \u00eatre avant tout ludique pour motiver les \u00e9l\u00e8ves \u00e0 faire les autres sc\u00e9narii d\u2019AmstramGrame par la suite. La le\u00e7on commence par l\u2019apprentissage d\u2019une pi\u00e8ce utilisant les diff\u00e9rents capteurs du Gramophone (capteur de lumi\u00e8re, capteur de pression, bouton, potentiom\u00e8tre, acc\u00e9l\u00e9rom\u00e8tre, gyroscope, etc.). Une fois cette pi\u00e8ce apprise et ma\u00eetris\u00e9e, les \u00e9l\u00e8ves \u00e9tudient lors d\u2019une seconde \u00e9tape le fonctionnement de chaque capteur. Par exemple, les diff\u00e9rences entre l\u2019acc\u00e9l\u00e9rom\u00e8tre et le gyroscope sont \u00e9tudi\u00e9es (ex. position relative vs. position absolue), les \u00e9l\u00e8ves observent les effets de la captation de position par rapport \u00e0 la d\u00e9tection d\u2019acc\u00e9l\u00e9rations, etc. On explique que les gramophones peuvent \u00eatre programm\u00e9s et que les diff\u00e9rents capteurs peuvent \u00eatre assign\u00e9s \u00e0 n\u2019importe quel param\u00e8tre d\u2019un g\u00e9n\u00e9rateur de son. Par exemple, un des capteurs de pression pourrait contr\u00f4ler la hauteur du son g\u00e9n\u00e9r\u00e9 dans le cas de la pi\u00e8ce \u00e9tudi\u00e9e lors de la premi\u00e8re \u00e9tape de cette le\u00e7on mais pourrait \u00eatre utilis\u00e9 pour contr\u00f4ler le volume d\u2019un son dans le cas d\u2019un autre programme. Cette le\u00e7on se termine en faisant une ouverture/pr\u00e9sentation de la suite des activit\u00e9s d\u2019AmstramGrame : musique \u00e9lectronique, programmation, physique, math\u00e9matique, etc.","title":"Prise en main du Gramophone/Smartphone"},{"location":"scenari/niveau1/#les-differents-types-de-sons-et-leurs-parametres","text":"Dur\u00e9e : 2h Niveau : D\u00e9butant Notions : Diff\u00e9rents types de sons, \u00e9chelle lin\u00e9aire vs. \u00e9chelle logarithmique, fr\u00e9quence/hauteur, gain/v\u00e9locit\u00e9 Disciplines li\u00e9es : Approche scientifique // physique, math\u00e9matique Pr\u00e9requis : Prise en main du gramophone/smartphone L\u2019objectif de cette le\u00e7on est de pr\u00e9senter les diff\u00e9rentes types de sons (ex. bruits, sons pures, harmoniques/inharmoniques) et leurs param\u00e8tres associ\u00e9s (ex. gain et fr\u00e9quence). Un programme pr\u00e9-install\u00e9 sur le gramophone permet d\u2019entendre ces diff\u00e9rents types de sons et de contr\u00f4ler leurs param\u00e8tres avec les diff\u00e9rents capteurs. Le code source de ce programme devrait pouvoir \u00eatre visualis\u00e9 par les \u00e9l\u00e8ves qui le souhaiteraient. Le concept de gain est introduit. On explique que le gain n\u2019est pas une valeur lin\u00e9aire et qu\u2019il faut plus que deux gramophones pour doubler le volume du son per\u00e7u, etc. Dans ce contexte l\u00e0, un mode du programme pr\u00e9-install\u00e9 sur le gramophone pourrait fonctionner en lin\u00e9aire et un autre en logarithmique pour entendre la diff\u00e9rence d\u2019un point de vue perceptuel. Le concept de fr\u00e9quence est introduit. On \u00e9tudie son lien avec la \"hauteur\" d\u2019un son et pourquoi pas avec les notes de musique. De la m\u00eame mani\u00e8re que pour le gain, on explique que ce param\u00e8tre n\u2019est pas lin\u00e9aire et qu\u2019il faut doubler la fr\u00e9quence d\u2019un son pour passer \u00e0 l\u2019octave sup\u00e9rieure. Le bruit n\u2019a qu\u2019un seul param\u00e8tre : son gain. Un son pur est produit par une onde sinuso\u00efdale. Il a deux param\u00e8tres : la fr\u00e9quence (hauteur) et le gain. Un son complex est compos\u00e9 de plusieurs sons pures (lien avec la le\u00e7on sur la synth\u00e8se additive). Dans le cas d\u2019un son harmonique, la fr\u00e9quence de chaque son pur est un multiple du son pur ayant la fr\u00e9quence la plus basse (fondamentale). Dans le cas d\u2019un son inharmonique, la fr\u00e9quence de chaque son pure ne d\u00e9pend pas de la fondamentale.","title":"Les diff\u00e9rents types de sons et leurs param\u00e8tres"},{"location":"scenari/niveau1/#anatomie-dun-programme-faust","text":"Dur\u00e9e : 1h Niveau : D\u00e9butant Notions : Biblioth\u00e8que (programmation), variable, contr\u00f4le du gain par une multiplication, interface graphique Disciplines li\u00e9es : Approche scientifique // programmation Pr\u00e9requis : Aucun L\u2019objectif de cette le\u00e7on est d\u2019\u00e9tudier et de comprendre la structure de base d\u2019un programme Faust. Cette le\u00e7on utilise l\u2019\u00e9diteur en ligne de Faust (int\u00e9grer dans le site web d\u2019Amstramgrame) mais pas le gramophone Le programme \u00e9tudi\u00e9 pourrait prendre la forme suivante : import(\"stdfaust.lib\"); freq = hslider(\"freq\",440,50,3000,0.01); gain = hslider(\"gain\",1,0,1,0.01); gate = button(\"gate\"); process = os.sawtooth(freq)*gain*gate; \u00c9diter/ex\u00e9cuter le programme >> L\u2019ensemble des \u00e9l\u00e9ments de ce programme sont \u00e9tudi\u00e9s (ex. concepts de biblioth\u00e8que, de variable, d\u2019\u00e9l\u00e9ment d\u2019interface utilisateur, etc.). On explique que le gain d\u2019un signal peut \u00eatre contr\u00f4l\u00e9 en le multipliant par un nombre entre 0 et 1 (ce qui revient \u00e0 le diviser). Concept d'interrupteur : le son peut \u00eatre jou\u00e9 ou non en appuyant sur un bouton. En \u00e9tant en mesure de contr\u00f4ler la hauteur d\u2019un son, son gain et le fait qu\u2019il soit actif ou non permet de mettre en place un synth\u00e9tiseur complet. Cette le\u00e7on peut prendre la forme d\u2019un tutoriel pas \u00e0 pas. Une ouverture est faite \u00e0 la fin de la le\u00e7on pour expliquer que ce programme qui fonctionne dans le cas pr\u00e9sent dans le navigateur web peut \u00eatre export\u00e9 vers le gramophone et que les curseurs et boutons pr\u00e9sents dans l\u2019interface graphique pourraient-\u00eatre remplac\u00e9s/assign\u00e9s \u00e0 des capteurs du gramophone.","title":"Anatomie d\u2019un programme Faust"},{"location":"scenari/niveau1/#programmer-le-gramophone","text":"Dur\u00e9e : 2h Niveau : D\u00e9butant Notions : Programmation du Gramophone Disciplines li\u00e9es : approche scientifique // programmation Pr\u00e9requis : Anatomie d\u2019un programme Faust L\u2019objectif de cette le\u00e7on est d\u2019apprendre \u00e0 programmer le gramophone et d\u2019associer certains de ses capteurs (capteurs \u201csimples\u201d comme le capteur de pression et de lumi\u00e8re, pas les acc\u00e9l\u00e9rom\u00e8tres) \u00e0 des param\u00e8tres du programme Faust. Le programme \u00e9tudi\u00e9 pourrait prendre la forme suivante (version adapt\u00e9e du programme pr\u00e9sent\u00e9 dans la le\u00e7on \u201cAnatomie d\u2019un programme Faust\u201d) : import(\"stdfaust.lib\"); freq = hslider(\"freq[gp:p0]\",440,50,3000,0.01); gain = hslider(\"gain[gp:p1]\",1,0,1,0.01); process = os.sawtooth(freq)*gain; L\u2019application d\u2019interface entre la machine utilis\u00e9e pour la programmation en Faust et le gramophone est \u00e9tudi\u00e9e. Les metadatas de capteurs (ex. [gp:p0] ) sont pr\u00e9sent\u00e9es et leur fonctionnement est d\u00e9crit. Des exercices autour du changement des mappings des param\u00e8tres (par exemple augmenter ou diminuer la gamme de la fr\u00e9quence) sont effectu\u00e9s. Diff\u00e9rents oscillateurs sont utilis\u00e9s pour produire diff\u00e9rents types de sons (ex. dent de scie, triangle, sinus, etc.) : lien avec la le\u00e7on \u201cIntroduction au design sonore\u201d.","title":"Programmer le Gramophone"}]}